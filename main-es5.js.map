{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.service.ts","webpack:///src/app/core/authentication/authentication.service.ts","webpack:///src/app/core/http.interceptor.ts","webpack:///src/app/core/root-store/browse-book-store/actions.ts","webpack:///src/app/core/root-store/browse-book-store/browse-book-store.module.ts","webpack:///src/app/core/root-store/browse-book-store/effects.ts","webpack:///src/app/core/root-store/browse-book-store/index.ts","webpack:///src/app/core/root-store/browse-book-store/metareducers.ts","webpack:///src/app/core/root-store/browse-book-store/model.ts","webpack:///src/app/core/root-store/browse-book-store/reducer.ts","webpack:///src/app/core/root-store/browse-book-store/selectors.ts","webpack:///src/app/core/root-store/browse-book-store/service.ts","webpack:///src/app/core/root-store/browse-book-store/state.ts","webpack:///src/app/core/root-store/index.ts","webpack:///src/app/core/root-store/my-lesson-store/actions.ts","webpack:///src/app/core/root-store/my-lesson-store/effects.ts","webpack:///src/app/core/root-store/my-lesson-store/index.ts","webpack:///src/app/core/root-store/my-lesson-store/metareducers.ts","webpack:///src/app/core/root-store/my-lesson-store/model.ts","webpack:///src/app/core/root-store/my-lesson-store/mylesson-store.module.ts","webpack:///src/app/core/root-store/my-lesson-store/reducer.ts","webpack:///src/app/core/root-store/my-lesson-store/selectors.ts","webpack:///src/app/core/root-store/my-lesson-store/service.ts","webpack:///src/app/core/root-store/my-lesson-store/state.ts","webpack:///src/app/core/root-store/revise-player-store/actions.ts","webpack:///src/app/core/root-store/revise-player-store/effects.ts","webpack:///src/app/core/root-store/revise-player-store/index.ts","webpack:///src/app/core/root-store/revise-player-store/model.ts","webpack:///src/app/core/root-store/revise-player-store/reducer.ts","webpack:///src/app/core/root-store/revise-player-store/revise-player-store.module.ts","webpack:///src/app/core/root-store/revise-player-store/selectors.ts","webpack:///src/app/core/root-store/revise-player-store/service.ts","webpack:///src/app/core/root-store/revise-player-store/state.ts","webpack:///src/app/core/root-store/root-store.module.ts","webpack:///src/app/core/root-store/root-store.state.ts","webpack:///src/app/core/shared-module/index.ts","webpack:///src/app/core/shared-module/shared-module-event-handler/index.ts","webpack:///src/app/core/shared-module/shared-module-event-handler/shared-module-event-handler.module.ts","webpack:///src/app/core/shared-module/shared-module-event-handler/shared-module-event-handler.service.ts","webpack:///src/app/core/shared-module/shared-module-event-handler/shared-module-event-handler.types.ts","webpack:///src/app/core/utility/time/time-utility.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/html-screens/html-screens-routing.module.ts","webpack:///src/app/html-screens/html-screens.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","loadChildren","m","BrowseBookModule","MyLessonModule","LessonPlayerModule","AppRoutingModule","forRoot","imports","AppComponent","outlet","activatedRouteData","animation","selector","templateUrl","styleUrls","checkToken","authenticationService","AppModule","provide","useFactory","deps","multi","useClass","declarations","providers","bootstrap","AppRoutingService","router","_launchedModuleName","fromModule","queryParams","getLaunchedModuleName","navigate","moduleName","AuthenticationService","http","timeUtilityService","authenticateUrl","credentials","post","token","JSON","parse","localStorage","getItem","getTimeSpan","differenceInTime","Date","date","days","reject","isTokenPresent","isTokenExpired","authenticate","userName","password","subscribe","tokenDetails","setItem","stringify","value","accessToken","getCurrentDate","error","TokenInterceptor","auth","next","clone","setHeaders","Authorization","getToken","handle","ApiInterceptor","apiReq","hostName","document","location","hostname","isApi","url","isApiArray","split","domains","includes","BrowseBookActionTypes","SetResource","payload","type","SET_RESOURCE","GetResources","GET_RESOURCES","GetResourcesSuccess","GET_RESOURCES_SUCCESS","GetResourcesFailed","GET_RESOURCES_FAILED","UpdateResource","UPDATE_RESOURCE","PrevNode","PREV_NODE","GetNodes","GET_NODES","SetNode","SET_NODE","GetNodesSuccess","GET_NODES_SUCCESS","GetNodesFailed","GET_NODES_FAILED","IsNodeEmpty","IS_NODE_EMPTY","IsResourceEmpty","IS_RESOURCE_EMPTY","GetConfig","GET_CONFIG","GetConfigSuccess","GET_CONFIG_SUCCESS","GetConfigFailed","GET_CONFIG_FAILED","BrowseBookStoreModule","forFeature","browseBook","metaReducers","BrowseBookEffects","actions$","browseBookService","store","getResources$","pipe","action","getResource","selectedNode","resource","length","err","message","getNode$","getNode","$goBack","navigateToNode","node","entities","parentNodeId","getConfig$","actions","getConfig","configData","config","reducers","localStorageSyncReducer","reducer","rehydrate","BrowseBookConfigInterface","browseBookReducer","state","selectedResourceId","updateOne","addMany","resources","nodes","isNodeEmpty","isResourceEmpty","getBrowseBookFeatureState","resourcesState","browsebook","nodeState","getSelectors","selectAllResources","selectAll","selectAllNodes","getCurrentResourceId","getCurrentResource","selectedId","getSelectedNodeId","getNodeList","isNodePresent","Object","values","filter","val","isResourcePresent","selectedResource","nodeId","getSelectedNodeList","getBrowseBookConfigByType","props","lessonType","BrowseBookService","nodeUrl","resourceUrl","configUrl","nodeType","get","resourceType","defaultResource","ids","defaultNode","resourceAdapter","selectId","resourceId","nodeAdapter","resourceInitialState","getInitialState","nodeInitialState","initialState","success","MyLessonsActionTypes","GetLessons","GET_LESSONS","GetLessonsSuccess","GET_LESSONS_SUCCESS","GetLessonsFailed","GET_LESSONS_FAILED","ResourceLoaded","RESOURCE_LOADED","GetLesson","GET_LESSON","LessonsEffects","lessonService","getLessons$","getAPILessons","lesson","myLesson","MyLessonConfigInterface","MyLessonStoreModule","lessonsReducer","selectedLessonId","msgText","lessons","resourceLoaded","getMyLessonFeatureState","getMyLessonInitialFeatureState","getLessons","getCurrentLessonId","getCurrentLesson","isResourceLoaded","getMyLessonConfigByType","LessonService","baseUrl","put","defaultLesson","myLessonAdapter","myLessonInitialState","RevisePlayerActionTypes","GetTqs","GET_TQS","GetTqsSuccess","GET_TQS_SUCCESS","GetTqsResourceSuccess","GET_TQS_RESOURCE_SUCCESS","GetTqsFailed","GET_TQS_FAILED","GetSubResourceSuccess","GET_SUB_RESOURCE_SUCCESS","GetSubResourceFailed","GET_SUB_RESOURCE_FAILED","IsTqsEmpty","IS_TQS_EMPTY","UpdateTqState","UPDATE_TQ_STATE","UpdateResourceState","UPDATE_RESOURCE_STATE","UpdateSubResourceState","UPDATE_SUB_RESOURCE_STATE","GetSubResource","GET_SUB_RESOURCE","ResetState","RESET_STATE","AddSubResourceInteraction","ADD_SUB_RESOURCE_INTERACTION","RevisePlayerEffects","revisePlayerService","resourceMap","assets","VIDEO","questions","QUIZ","getRevise$","getRevise","reviseData","tq","i","push","tqId","label","TpRef","tqState","UNLOCK","j","revise","data","resourceState","summary","cards","SUMMARY","$getSubResource","getSubResource","subResourceData","subResource","TqState","ResourceState","SubResourceState","RevisePLayerResourceType","revisePlayerReducer","isTqsEmpty","RevisePlayerStoreModule","revisePlayer","getRevisePlayerFeatureState","subResourceState","selectAllTqs","selectAllResource","selectAllSubResource","tqs","getResourceByTq","getResourceByResourceId","isSubResourcePresent","subResources","subResourceId","getSubResourceByKeyValue","key","getTotalResourceTypeLength","resourceTypeArray","map","count","filteredResources","RevisePlayerService","revisePlayerDataUrl","subResourceUrls","tqIds","params","defaultTq","defaultSubResource","tqAdapter","subResourceAdapter","tqInitialState","subResourceInitialState","RootStoreModule","instrument","states","SharedModuleEventHandlerModule","ngModule","SharedModuleEventHandlerService","listeners","eventsSubject","events","name","args","listener","sharedModuleEventHandlerType","DateTypes","TimeUtilityService","time","getCurrentDateTime","newDate","console","log","getTime","date1","date2","startDate","endDate","difference","Math","abs","floor","hours","minutes","seconds","HomeComponent","route","envName","timeStamp","html","display","videoPlayerModule","HtmlScreensRoutingModule","HtmlScreensModule","environment","production","googleAnalyticsId"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'browseBook',\n    loadChildren: () =>\n      import('./browse-book/browse.book.module').then(\n        m => m.BrowseBookModule\n      )\n  },\n  {\n    path: 'myLesson',\n    loadChildren: () =>\n      import('./my-lesson/my-lesson.module').then(\n        m => m.MyLessonModule\n      )\n  },\n  {\n    path: 'lesson',\n    loadChildren: () =>\n      import('./lesson-player/lesson-player.module').then(\n        m => m.LessonPlayerModule\n      )\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'nx-afs-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n}\n","<div>\n  <router-outlet #outlet=\"outlet\"></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RootStoreModule } from './core/root-store/root-store.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingService } from './app.routing.service';\nimport { BrowseBookStoreModule, MyLessonStoreModule } from '@root-store';\nimport { SharedModuleEventHandlerModule } from '@shared-event-handler';\nimport { HomeComponent } from './home/home.component';\nimport { HtmlScreensModule } from './html-screens/html-screens.module';\nimport { ApiInterceptor, TokenInterceptor } from './core/http.interceptor';\nimport { AuthenticationService } from './core/authentication/authentication.service';\nimport { TimeUtilityService } from '@utility/time/time-utility.service';\n\nexport function checkToken(authenticationService: AuthenticationService) {\n  return () => authenticationService.checkToken();\n}\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    RootStoreModule,\n    BrowserAnimationsModule,\n    BrowseBookStoreModule,\n    MyLessonStoreModule,\n    SharedModuleEventHandlerModule.forRoot(),\n    HtmlScreensModule\n  ],\n  providers: [\n    AppRoutingService,\n    AuthenticationService,\n    TimeUtilityService,\n    { provide: APP_INITIALIZER, useFactory: checkToken, deps: [AuthenticationService], multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n  ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable()\n\nexport class AppRoutingService{\n    private _launchedModuleName: string = \"\";\n\n    constructor(private router: Router){}\n\n    launchLessonPlayer(fromModule, queryParams){\n        this.getLaunchedModuleName = fromModule;\n        this.router.navigate(['/lesson/player'], {queryParams: queryParams});\n    }\n\n    get getLaunchedModuleName(){\n        return this._launchedModuleName;\n    }\n\n    set getLaunchedModuleName(moduleName: string){\n        this._launchedModuleName = moduleName;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {\n  TimeUtilityService,\n  DateTypes\n} from '@utility/time/time-utility.service';\nimport { Observable } from 'rxjs';\n\nexport interface AuthenticationTokenDetails {\n  accessToken: string;\n  clientId: string;\n  refreshToken: string;\n}\n\n@Injectable()\nexport class AuthenticationService {\n  authenticateUrl = 'tce/login';\n\n  constructor(\n    private http: HttpClient,\n    private timeUtilityService: TimeUtilityService\n  ) {}\n\n  authenticate(credentials) {\n    return this.http.post<AuthenticationTokenDetails>(\n      this.authenticateUrl,\n      credentials\n    );\n  }\n\n  isTokenExpired() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    const getTimeSpan = this.timeUtilityService.differenceInTime(\n      new Date(),\n      new Date(token.date)\n    );\n    if (getTimeSpan.days > 10) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isTokenPresent() {\n    const token = localStorage.getItem('token');\n    return token ? true : false;\n  }\n\n  checkToken(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.isTokenPresent() && !this.isTokenExpired()) {\n        resolve();\n      } else {\n        this.authenticate({ userName: 'ajay', password: 'ajay' }).subscribe(\n          tokenDetails => {\n            localStorage.setItem(\n              'token',\n              JSON.stringify({\n                value: tokenDetails.accessToken,\n                date: this.timeUtilityService.getCurrentDate()\n              })\n            );\n            resolve();\n          },\n          error => {\n            reject(error);\n          }\n        );\n      }\n    });\n  }\n\n  getToken() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    if(token){\n      return token.value;\n    }else{\n      return null;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './authentication/authentication.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private auth: AuthenticationService) {}\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.auth.getToken()}`\n      }\n    });\n    return next.handle(req);\n  }\n}\n\nexport class ApiInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    let apiReq;\n    const hostName = document.location.hostname;\n    let isApi = req.url;\n    let isApiArray = isApi.split('/');\n    let domains = [\n      'ui-static-files.s3-website.ap-south-1.amazonaws.com',\n      'tce-afs-web.firebaseapp.com'\n    ];\n\n    if (\n      domains.includes(hostName) && (isApiArray[0] === 'tce' || isApiArray[0] === 'student')\n    ) {\n      apiReq = req.clone({\n        url: `http://13.235.241.238:8080/${req.url}`\n      });\n    } else if (domains.includes(hostName) && isApiArray[0] === 'dummy-api') {\n      apiReq = req.clone({ url: `https://classedgeapps.firebaseapp.com/api/${req.url}` });\n    } else {\n      apiReq = req.clone({ url: `${req.url}` });\n    }\n\n    return next.handle(apiReq);\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { NodeInterface, ResourceInterface, BrowseBookConfigInterface, BrowseBookConfigTypeInterface } from './model';\n\nexport enum BrowseBookActionTypes {\n  SET_RESOURCE = '[BrowseBook] SET_RESOURCE',\n  GET_RESOURCES = '[BrowseBook] GET_RESOURCES',\n  GET_RESOURCES_SUCCESS = '[BrowseBook] GET_RESOURCES_SUCCESS',\n  GET_RESOURCES_FAILED = '[BrowseBook] GET_RESOURCES_FAILED',\n  UPDATE_RESOURCE = '[BrowseBook] UPDATE_RESOURCE',\n\n  PREV_NODE = '[BrowseBook] PREV_NODE',\n  GET_NODES = '[BrowseBook] GET_NODES',\n  SET_NODE = '[BrowseBook] SET_NODE',\n  GET_NODES_SUCCESS = '[BrowseBook] GET_NODES_SUCCESS',\n  GET_NODES_FAILED = '[BrowseBook] GET_NODES_FAILED',\n\n  IS_NODE_EMPTY = '[BrowseBook] IS_NODE_EMPTY',\n  IS_RESOURCE_EMPTY = '[BrowseBook] IS_RESOURCE_EMPTY',\n\n  GET_CONFIG = '[BrowseBook] GET_CONFIG',\n  GET_CONFIG_SUCCESS = '[BrowseBook] GET_CONFIG_SUCCESS',\n  GET_CONFIG_FAILED = '[BrowseBook] GET_CONFIG_FAILED'\n}\n\nexport class SetResource implements Action {\n  readonly type = BrowseBookActionTypes.SET_RESOURCE;\n\n  constructor(public payload: string) {}\n}\nexport class GetResources implements Action {\n  readonly type = BrowseBookActionTypes.GET_RESOURCES;\n}\nexport class GetResourcesSuccess implements Action {\n  readonly type = BrowseBookActionTypes.GET_RESOURCES_SUCCESS;\n  constructor(public payload: ResourceInterface[]) {}\n}\nexport class GetResourcesFailed implements Action {\n  readonly type = BrowseBookActionTypes.GET_RESOURCES_FAILED;\n  constructor(public payload: string) {}\n}\nexport class UpdateResource implements Action {\n  readonly type = BrowseBookActionTypes.UPDATE_RESOURCE;\n  constructor(public payload: Update<ResourceInterface>) {}\n}\n\nexport class PrevNode implements Action {\n  readonly type = BrowseBookActionTypes.PREV_NODE;\n}\nexport class GetNodes implements Action {\n  readonly type = BrowseBookActionTypes.GET_NODES;\n}\nexport class SetNode implements Action {\n  readonly type = BrowseBookActionTypes.SET_NODE;\n\n  constructor(public payload: string) {}\n}\nexport class GetNodesSuccess implements Action {\n  readonly type = BrowseBookActionTypes.GET_NODES_SUCCESS;\n\n  constructor(public payload: NodeInterface[]) {}\n}\nexport class GetNodesFailed implements Action {\n  readonly type = BrowseBookActionTypes.GET_NODES_FAILED;\n\n  constructor(public payload: string) {}\n}\n\nexport class IsNodeEmpty implements Action {\n  readonly type = BrowseBookActionTypes.IS_NODE_EMPTY;\n\n  constructor(public payload: boolean) {}\n}\nexport class IsResourceEmpty implements Action {\n  readonly type = BrowseBookActionTypes.IS_RESOURCE_EMPTY;\n\n  constructor(public payload: boolean) {}\n}\n\nexport class GetConfig implements Action {\n  readonly type = BrowseBookActionTypes.GET_CONFIG;\n\n  constructor(public payload: string) {}\n}\nexport class GetConfigSuccess implements Action {\n  readonly type = BrowseBookActionTypes.GET_CONFIG_SUCCESS;\n\n  constructor(public payload: BrowseBookConfigTypeInterface) {}\n}\nexport class GetConfigFailed implements Action {\n  readonly type = BrowseBookActionTypes.GET_CONFIG_FAILED;\n\n  constructor(public payload: string) {}\n}\n\nexport type BrowseBookActions =\n  | GetResources\n  | SetResource\n  | GetResourcesSuccess\n  | GetResourcesFailed\n  | UpdateResource\n  | PrevNode\n  | GetNodes\n  | SetNode\n  | GetNodesSuccess\n  | GetNodesFailed\n  | IsNodeEmpty\n  | IsResourceEmpty\n  | GetConfig\n  | GetConfigSuccess\n  | GetConfigFailed;\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { BrowseBookService } from './service';\nimport { BrowseBookEffects } from './effects';\nimport { states } from './../root-store.state';\nimport { reducers, metaReducers } from './metareducers';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(states.browseBook, reducers, { metaReducers }),\n    EffectsModule.forFeature([BrowseBookEffects])\n  ],\n  providers: [BrowseBookService, BrowseBookEffects]\n})\nexport class BrowseBookStoreModule {}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { catchError, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { BrowseBookService } from './service';\nimport * as browseBookActions from './actions';\nimport { NodeInterface, ResourceInterface, BrowseBookConfigInterface } from './model';\nimport { State } from './../root-store.state';\nimport { Store } from '@ngrx/store';\n\n@Injectable()\nexport class BrowseBookEffects {\n  constructor(\n    private actions$: Actions,\n    private browseBookService: BrowseBookService,\n    private store: Store<State>\n  ) {}\n\n  @Effect()\n  getResources$ = this.actions$.pipe(\n    ofType<browseBookActions.GetResources>(\n      browseBookActions.BrowseBookActionTypes.GET_RESOURCES\n    ),\n    withLatestFrom(this.store),\n    switchMap(([action, store]) => {\n      return this.browseBookService\n        .getResource(store.browseBook.browseBook.selectedNode)\n        .pipe(\n          switchMap((resource: ResourceInterface[]) => {\n            if (resource.length != 0) {\n              return [new browseBookActions.GetResourcesSuccess(resource)];\n            } else {\n              return [new browseBookActions.IsResourceEmpty(true)];\n            }\n          }),\n          catchError(err =>\n            of(new browseBookActions.GetResourcesFailed(err.message))\n          )\n        );\n    })\n  );\n\n  @Effect()\n  getNode$ = this.actions$.pipe(\n    ofType<browseBookActions.GetNodes>(\n      browseBookActions.BrowseBookActionTypes.GET_NODES\n    ),\n    withLatestFrom(this.store),\n    switchMap(([action, store]) => {\n      return this.browseBookService\n        .getNode(store.browseBook.browseBook.selectedNode)\n        .pipe(\n          switchMap((resource: NodeInterface[]) => {\n            if (resource.length != 0) {\n              return [new browseBookActions.GetNodesSuccess(resource)];\n            } else {\n              return [new browseBookActions.IsNodeEmpty(true)];\n            }\n          }),\n          catchError(err =>\n            of(new browseBookActions.GetNodesFailed(err.message))\n          )\n        );\n    })\n  );\n\n  @Effect()\n  $goBack = this.actions$.pipe(\n    ofType<browseBookActions.PrevNode>(\n      browseBookActions.BrowseBookActionTypes.PREV_NODE\n    ),\n    withLatestFrom(this.store),\n    switchMap(([action, store]) => {\n      const navigateToNode = store.browseBook.browseBook.node.entities[\n        store.browseBook.browseBook.selectedNode\n      ] as NodeInterface;\n      if (navigateToNode) {\n        return of(new browseBookActions.SetNode(navigateToNode.parentNodeId));\n      } else {\n        return new Observable();\n      }\n    })\n  );\n\n  @Effect()\n  getConfig$ = this.actions$.pipe(\n    ofType<browseBookActions.GetConfig>(\n      browseBookActions.BrowseBookActionTypes.GET_CONFIG\n    ),\n    switchMap((actions: browseBookActions.GetConfig) => \n    this.browseBookService.getConfig(actions.payload).pipe(\n      switchMap((configData: BrowseBookConfigInterface) => {\n        const config = {};\n        config[actions.payload] = configData;\n        return [\n          new browseBookActions.GetConfigSuccess(config),\n        ]\n      }),\n      catchError(err => of(new browseBookActions.GetConfigFailed(err.message)))\n    ))\n  );\n}\n","import * as browseBookActions from './actions';\nimport * as browseBookSelectors from './selectors';\nimport * as browseBookState from './state';\nimport { BrowseBookStoreModule } from './browse-book-store.module';\n\nexport {\n  ResourceInterface,\n  NodeInterface,\n  BrowseBookConfigInterface\n} from './model';\n\nexport {\n  BrowseBookStoreModule,\n  browseBookActions,\n  browseBookSelectors,\n  browseBookState\n};\n","import { ActionReducer, MetaReducer, ActionReducerMap } from '@ngrx/store';\nimport * as fromBrowseBook from './state';\nimport { browseBookReducer } from './reducer';\nimport { localStorageSync } from 'ngrx-store-localstorage';\nimport { states } from './../root-store.state';\nimport { Action } from '@ngrx/store';\n\nexport const reducers: ActionReducerMap<fromBrowseBook.BrowseBookState> = {\n  browseBook: browseBookReducer\n};\n\nexport function localStorageSyncReducer(\n  reducer: ActionReducer<any>\n): ActionReducer<any> {\n  return localStorageSync({\n    keys: [states.browseBook],\n    rehydrate: true\n  })(reducer);\n}\n\nexport const metaReducers: Array<MetaReducer<\n  fromBrowseBook.BrowseBookState,\n  Action\n>> = [localStorageSyncReducer];\n","export interface NodeInterface {\n  nodeId: string;\n  nodeLabel: string;\n  acronym: string;\n  totalChildNodes: number;\n  childNodeType: string;\n  lastVisitedDt: string;\n  duration: number;\n  parentNodeId: string;\n  nodeType: string;\n  progress: number;\n}\n\nexport interface BrowseBookConfigTypeInterface{\n  revise?: BrowseBookConfigInterface,\n  practice?: BrowseBookConfigInterface\n}\n\nexport class BrowseBookConfigInterface{\n  dynamicComponents: Array<string>;\n  controls: object\n}\n\nexport interface ResourceInterface {\n  resourceId: string;\n  lessonLabel: string;\n  duration: number;\n  acronym: string;\n  lessonType: string;\n  chapterLabel: string;\n  tqList: [];\n  lessonSeq: number;\n  progress: number;\n  lastVisitDt: string;\n  nodeId: string;\n  introScreen? : {\n    dynamicComponents: Array<string>,\n    // controls: any\n  };\n}\n","import * as fromBrowseBookResourceAction from './actions';\nimport {\n  initialState,\n  BrowseBookInitialState,\n  resourceAdapter,\n  nodeAdapter\n} from './state';\n\nexport function browseBookReducer(\n  state = initialState,\n  actions: fromBrowseBookResourceAction.BrowseBookActions\n): BrowseBookInitialState {\n  switch (actions.type) {\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.SET_RESOURCE: {\n      return { ...state, selectedResourceId: actions.payload };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.UPDATE_RESOURCE: {\n      return {\n        ...state,\n        resource: resourceAdapter.updateOne(actions.payload, state.resource)\n      };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes\n      .GET_RESOURCES_SUCCESS: {\n      return {\n        ...state,\n        resource: resourceAdapter.addMany(actions.payload, {\n          ...state.resource,\n          resources: [...state.resource.resources, ...actions.payload]\n        })\n      };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.SET_NODE: {\n      return {\n        ...state,\n        selectedNode: actions.payload\n      };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.GET_NODES_SUCCESS: {\n      return {\n        ...state,\n        node: nodeAdapter.addMany(actions.payload, {\n          ...state.node,\n          nodes: [...state.node.nodes, ...actions.payload]\n        })\n      };\n    }\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.GET_NODES_FAILED: {\n      return {\n        ...state,\n        error: actions.payload\n      };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.IS_NODE_EMPTY: {\n      return {\n        ...state,\n        isNodeEmpty: actions.payload\n      };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.IS_RESOURCE_EMPTY: {\n      return {\n        ...state,\n        isResourceEmpty: actions.payload\n      };\n    }\n    \n    case fromBrowseBookResourceAction.BrowseBookActionTypes.GET_CONFIG_SUCCESS: {\n      return {\n        ...state,\n        config: actions.payload\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport {\n  ResourceState,\n  resourceAdapter,\n  nodeAdapter,\n  NodeState,\n  BrowseBookState\n} from './state';\nimport { states } from './../root-store.state';\n\nconst getBrowseBookFeatureState = createFeatureSelector<BrowseBookState>(\n  states.browseBook\n);\n\nexport const resourcesState = createSelector(\n  getBrowseBookFeatureState,\n  browsebook => browsebook.browseBook.resource\n);\n\nexport const nodeState = createSelector(\n  getBrowseBookFeatureState,\n  node => node.browseBook.node\n);\n\nexport const { selectAll: selectAllResources } = resourceAdapter.getSelectors(\n  resourcesState\n);\n\nexport const { selectAll: selectAllNodes } = nodeAdapter.getSelectors(\n  nodeState\n);\n\nexport const getCurrentResourceId = createSelector(\n  getBrowseBookFeatureState,\n  (state: BrowseBookState) => state.browseBook.selectedResourceId\n);\n\nexport const getCurrentResource = createSelector(\n  resourcesState,\n  getCurrentResourceId,\n  (state: ResourceState, selectedId: string) => {\n    return state.entities[selectedId];\n  }\n);\n\nexport const getSelectedNodeId = createSelector(\n  getBrowseBookFeatureState,\n  (state: BrowseBookState) => state.browseBook.selectedNode\n);\n\nexport const getNodeList = createSelector(nodeState, state => state.entities);\nexport const isNodePresent = createSelector(\n  nodeState,\n  getSelectedNodeId,\n  (state: NodeState, selectedNode: string) => {\n    return Object.values(state.entities).filter(\n      val => val.parentNodeId === selectedNode\n    );\n  }\n);\n\nexport const isResourcePresent = createSelector(\n  resourcesState,\n  getSelectedNodeId,\n  (state: ResourceState, selectedResource: string) => {\n    return Object.values(state.entities).filter(\n      val => val.nodeId === selectedResource\n    );\n  }\n);\n\nexport const getSelectedNodeList = createSelector(\n  nodeState,\n  getSelectedNodeId,\n  (state: NodeState, selectedNode: string) => {\n    return state.nodes.filter(node => node.parentNodeId === selectedNode);\n  }\n);\n\nexport const isNodeEmpty = createSelector(\n  getBrowseBookFeatureState,\n  (state: BrowseBookState) => state.browseBook.isNodeEmpty\n);\n\nexport const isResourceEmpty = createSelector(\n  getBrowseBookFeatureState,\n  (state: BrowseBookState) => state.browseBook.isResourceEmpty\n);\n\nexport const getBrowseBookConfigByType = () =>\n  createSelector(\n    getBrowseBookFeatureState,\n    (state: BrowseBookState, props: {lessonType: string }) => state.browseBook.config[props.lessonType]\n  );\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { NodeInterface, ResourceInterface, BrowseBookConfigInterface } from './model';\n\n@Injectable()\nexport class BrowseBookService {\n  nodeUrl: string = 'dummy-api/browse-book/nodes';\n  resourceUrl: string = 'dummy-api/browse-book/resources';\n  configUrl: string = 'dummy-api/browse-book/config';\n\n  constructor(private http: HttpClient) {}\n\n  getNode(nodeType: string) {\n    return this.http\n      .get<NodeInterface[]>(`${this.nodeUrl}/${nodeType}`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  getResource(resourceType: string) {\n    return this.http\n      .get<ResourceInterface[]>(`${this.resourceUrl}/${resourceType}`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  getConfig(type: string){\n    return this.http\n      .get<BrowseBookConfigInterface>(`${this.configUrl}/${type}`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n}\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { NodeInterface, ResourceInterface, BrowseBookConfigInterface, BrowseBookConfigTypeInterface } from './model';\n\nexport interface ResourceState extends EntityState<ResourceInterface> {\n  resources: ResourceInterface[];\n}\n\nexport const defaultResource: ResourceState = {\n  ids: [],\n  entities: {},\n  resources: []\n};\n\nexport interface NodeState extends EntityState<NodeInterface> {\n  nodes: NodeInterface[];\n}\n\nexport const defaultNode: NodeState = {\n  ids: [],\n  entities: {},\n  nodes: []\n};\n\nexport const resourceAdapter: EntityAdapter<ResourceInterface> = createEntityAdapter<\n  ResourceInterface\n>({\n  selectId: (resource: ResourceInterface) => resource.resourceId\n});\nexport const nodeAdapter: EntityAdapter<NodeInterface> = createEntityAdapter<\n  NodeInterface\n>({\n  selectId: (node: NodeInterface) => node.nodeId\n});\n\nconst resourceInitialState = resourceAdapter.getInitialState(defaultResource);\nconst nodeInitialState = nodeAdapter.getInitialState(defaultNode);\n\nexport interface BrowseBookInitialState {\n  resource: ResourceState;\n  node: NodeState;\n  selectedResourceId: string | null;\n  selectedNode: string;\n  isNodeEmpty: boolean;\n  isResourceEmpty: boolean;\n  config?: BrowseBookConfigTypeInterface;\n  error: string;\n  success: string;\n}\n\nexport const initialState: BrowseBookInitialState = {\n  resource: resourceInitialState,\n  node: nodeInitialState,\n  selectedResourceId: null,\n  selectedNode: 'root',\n  isNodeEmpty: true,\n  config: {},\n  isResourceEmpty: true,\n  error: '',\n  success: ''\n};\n\nexport interface BrowseBookState {\n  browseBook: BrowseBookInitialState;\n}\n","import * as RootStoreState from './root-store.state';\nexport * from './my-lesson-store';\nexport * from './browse-book-store';\nexport * from './revise-player-store';\nexport { RootStoreState }","import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { MyLessonInterface, MyLessonConfigTypeInterface } from './model';\n\nexport enum MyLessonsActionTypes {\n  SET_RESOURCE = '[MyLesson]  SET_RESOURCE',\n  UPDATE_RESOURCE = '[MyLesson] UPDATE_RESOURCE',\n  GET_RESOURCES = '[MyLesson] GET_RESOURCES',\n  GET_LESSON = '[MyLesson] GET_LESSON',\n  GET_LESSONS = '[MyLesson] GET_LESSONS',\n  GET_LESSONS_SUCCESS = '[MyLesson] GET_LESSONS_SUCCESS',\n  GET_LESSONS_FAILED = '[MyLesson] GET_LESSONS_FAILED',\n  RESOURCE_LOADED = '[MyLesson] RESOURCE_LOADED',\n  GET_CONFIG = '[MyLesson] GET_CONFIG',\n  GET_CONFIG_SUCCESS = '[MyLesson] GET_CONFIG_SUCCESS',\n  GET_CONFIG_FAILED = '[MyLesson] GET_CONFIG_FAILED'\n}\n\nexport class SetResource implements Action {\n  readonly type = MyLessonsActionTypes.SET_RESOURCE;\n\n  constructor(public payload: string) {}\n}\n\nexport class UpdateResource implements Action {\n  readonly type = MyLessonsActionTypes.UPDATE_RESOURCE;\n  constructor(public payload: Update<MyLessonInterface>) {}\n}\nexport class GetResources implements Action {\n  readonly type = MyLessonsActionTypes.GET_RESOURCES;\n}\nexport class GetLessons implements Action {\n  readonly type = MyLessonsActionTypes.GET_LESSONS;\n}\n\nexport class GetLessonsSuccess implements Action {\n  readonly type = MyLessonsActionTypes.GET_LESSONS_SUCCESS;\n\n  constructor(public payload: Array<MyLessonInterface>) {}\n}\nexport class GetLessonsFailed implements Action {\n  readonly type = MyLessonsActionTypes.GET_LESSONS_FAILED;\n  constructor(public payload: string) {}\n}\n\nexport class ResourceLoaded implements Action {\n  readonly type = MyLessonsActionTypes.RESOURCE_LOADED;\n\n  constructor(public payload: boolean) {}\n}\n\nexport class GetLesson implements Action {\n  readonly type = MyLessonsActionTypes.GET_LESSON;\n\n  constructor(public payload: string) {}\n}\n\nexport class GetConfig implements Action {\n  readonly type = MyLessonsActionTypes.GET_CONFIG;\n\n  constructor(public payload: string) {}\n}\nexport class GetConfigSuccess implements Action {\n  readonly type = MyLessonsActionTypes.GET_CONFIG_SUCCESS;\n\n  constructor(public payload: MyLessonConfigTypeInterface) {}\n}\nexport class GetConfigFailed implements Action {\n  readonly type = MyLessonsActionTypes.GET_CONFIG_FAILED;\n\n  constructor(public payload: string) {}\n}\n\nexport type MyLessonsActions =\n  | GetLesson\n  | SetResource\n  | GetLessons\n  | GetLessonsSuccess\n  | GetLessonsFailed\n  | ResourceLoaded\n  | GetResources\n  | UpdateResource\n  | GetConfig\n  | GetConfigSuccess\n  | GetConfigFailed;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { LessonService } from './service';\nimport * as lessonActions from './actions';\nimport { MyLessonInterface, MyLessonConfigInterface } from './model';\n\n@Injectable()\nexport class LessonsEffects {\n  constructor(\n    private actions$: Actions,\n    private lessonService: LessonService\n  ) {}\n\n  @Effect()\n  getLessons$ = this.actions$.pipe(\n    ofType<lessonActions.GetLessons>(\n      lessonActions.MyLessonsActionTypes.GET_LESSONS\n    ),\n    switchMap((actions: lessonActions.GetLessons) =>\n      this.lessonService.getAPILessons().pipe(\n        switchMap((lesson: MyLessonInterface[]) => [\n          new lessonActions.GetLessonsSuccess(lesson),\n          new lessonActions.ResourceLoaded(true)\n        ]),\n        catchError(err => of(new lessonActions.GetLessonsFailed(err.message)))\n      )\n    )\n  );\n\n  @Effect()\n  getConfig$ = this.actions$.pipe(\n    ofType<lessonActions.GetConfig>(\n      lessonActions.MyLessonsActionTypes.GET_CONFIG\n    ),\n    switchMap((actions: lessonActions.GetConfig) =>\n      this.lessonService.getConfig(actions.payload).pipe(\n        switchMap((configData: MyLessonConfigInterface) => {\n          const config = {};\n          config[actions.payload] = configData;\n          return [new lessonActions.GetConfigSuccess(config)];\n        }),\n        catchError(err => of(new lessonActions.GetConfigFailed(err.message)))\n      )\n    )\n  );\n\n  // @Effect()\n  // updateLesson$ = this.actions$.pipe(\n  //     ofType<lessonActions.UpdateLessonApi>(\n  //         lessonActions.LessonsActionType.UPDATE_LESSON_API\n  //     ),\n  //     mergeMap((actions: lessonActions.UpdateLessonApi) =>\n  //         this.lessonService.updateAPILesson(actions.payload).pipe(\n  //             map((lesson: LessonInterface) => new lessonActions.UpdateLessonSuccess('Lesson Updated Successfully!')),\n  //             catchError(err => of(new lessonActions.UpdateLessonFailed(err.message))),\n  //             tap(action => console.log(action))\n  //         )\n  //     )\n  // );\n}\n","import * as myLessonActions from './actions';\nimport * as myLessonSelectors from './selectors';\nimport * as myLessonState from './state';\nimport { MyLessonStoreModule } from './mylesson-store.module';\nexport {\n  MyLessonInterface,\n  MyLessonConfigInterface\n} from './model';\n\nexport {\n  MyLessonStoreModule,\n  myLessonActions,\n  myLessonSelectors,\n  myLessonState\n};\n","import { ActionReducer, MetaReducer, ActionReducerMap } from '@ngrx/store';\nimport * as fromMylesson from './state';\nimport { lessonsReducer } from './reducer';\nimport { localStorageSync } from 'ngrx-store-localstorage';\nimport { states } from './../root-store.state';\n\nexport const reducers: ActionReducerMap<fromMylesson.MyLessonstate> = {\n  myLesson: lessonsReducer\n};\n\nexport function localStorageSyncReducer(\n  reducer: ActionReducer<any>\n): ActionReducer<any> {\n  return localStorageSync({\n    keys: [states.myLesson],\n    rehydrate: true\n  })(reducer);\n}\n\nexport const metaReducers: Array<MetaReducer<any, any>> = [\n  localStorageSyncReducer\n];\n","export interface MyLessonConfigTypeInterface{\n  revise?: MyLessonConfigInterface,\n  practice?: MyLessonConfigInterface\n}\n\nexport class MyLessonConfigInterface{\n  dynamicComponents: Array<string>;\n  controls: object\n}\n\n\nexport interface MyLessonInterface {\n  id: string;\n  assignedDt: string;\n  assignedSeq: number;\n  chapterLabel: string;\n  complete: number;\n  completedDt: string;\n  duration: number;\n  goalsAchieved: number;\n  isMandatory: number;\n  lastVisitDt: string;\n  lessonId: number;\n  lessonLabel: string;\n  lessonSeq: number;\n  lessonType: string;\n  nodeMapping: string;\n  projectedDt: string;\n  scheduledDt: string;\n  score: number;\n  status: number;\n  timeSpent: number;\n  totalGoals: number;\n  tqList: Array<any>;\n  introScreen? : {\n    dynamicComponents: Array<string>,\n    // controls: any\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { LessonService } from './service';\nimport { LessonsEffects } from './effects';\nimport { states } from './../root-store.state';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './metareducers';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(states.myLesson, reducers, { metaReducers }),\n    EffectsModule.forFeature([LessonsEffects])\n  ],\n  providers: [LessonService, LessonsEffects]\n})\nexport class MyLessonStoreModule {}\n","import * as fromMyLessonAction from './actions';\nimport { MyLessonInitialState, myLessonAdapter, initialState } from './state';\n\nexport function lessonsReducer(\n  state = initialState,\n  actions: fromMyLessonAction.MyLessonsActions\n): MyLessonInitialState {\n  switch (actions.type) {\n    case fromMyLessonAction.MyLessonsActionTypes.SET_RESOURCE: {\n      return { ...state, selectedLessonId: actions.payload };\n    }\n    case fromMyLessonAction.MyLessonsActionTypes.GET_LESSON: {\n      return { ...state, selectedLessonId: actions.payload };\n    }\n    case fromMyLessonAction.MyLessonsActionTypes.GET_LESSONS_SUCCESS: {\n      let msgText = '';\n\n      if (actions.payload.length < 1) {\n        msgText = 'No data found';\n      } else {\n        msgText = 'Loading data';\n      }\n\n      return {\n        ...state,\n        lessons: myLessonAdapter.addMany(actions.payload, {\n          ...state.lessons,\n          lesson: [...state.lessons.lesson, ...actions.payload]\n        })\n      }\n    }\n    case fromMyLessonAction.MyLessonsActionTypes.GET_LESSONS_FAILED: {\n      return { ...state, error: actions.payload };\n    }\n\n    case fromMyLessonAction.MyLessonsActionTypes.RESOURCE_LOADED: {\n      return { ...state, resourceLoaded: actions.payload };\n    }\n    case fromMyLessonAction.MyLessonsActionTypes.UPDATE_RESOURCE: {\n      return {\n        ...state,\n        lessons: myLessonAdapter.updateOne(actions.payload, state.lessons)\n      };\n    }\n\n    case fromMyLessonAction.MyLessonsActionTypes.GET_CONFIG_SUCCESS: {\n      return {\n        ...state,\n        config: actions.payload\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { MyLessonstate, myLessonAdapter } from './state';\nimport { states } from './../root-store.state';\n\nconst getMyLessonFeatureState = createFeatureSelector<MyLessonstate>(\n  states.myLesson\n);\n\nexport const getMyLessonInitialFeatureState = createSelector(\n  getMyLessonFeatureState,\n  myLesson => myLesson.myLesson.lessons\n);\n\nexport const { selectAll: getLessons } = myLessonAdapter.getSelectors(getMyLessonInitialFeatureState);\n\nexport const getCurrentLessonId = createSelector(\n  getMyLessonFeatureState,\n  (state: MyLessonstate) => state.myLesson.selectedLessonId\n);\n\nexport const getCurrentLesson = createSelector(\n  getMyLessonFeatureState,\n  getCurrentLessonId,\n  (state: MyLessonstate) => {\n    return state.myLesson.lessons.entities[state.myLesson.selectedLessonId];\n  }\n);\n\nexport const isResourceLoaded = createSelector(\n  getMyLessonFeatureState,\n  (state: MyLessonstate) => {\n    return state.myLesson.resourceLoaded;\n  }\n);\n\nexport const getMyLessonConfigByType = () =>\n  createSelector(\n    getMyLessonFeatureState,\n    (state: MyLessonstate, props: {lessonType: string }) => state.myLesson.config[props.lessonType]\n  );","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { MyLessonInterface, MyLessonConfigInterface } from './model';\n\n@Injectable()\nexport class LessonService {\n  baseUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.baseUrl = 'dummy-api';\n  }\n\n  getAPILessons() {\n    return this.http\n      .get(`${this.baseUrl}/mylessons`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  getVideoPlayerData() {\n    return this.http\n      .get(`${this.baseUrl}/video-player`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  updateAPILesson(lesson: MyLessonInterface) {\n    return this.http\n      .put(`${this.baseUrl}/lessons/${lesson.id}`, lesson)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  getConfig(type: string){\n    return this.http\n      .get<MyLessonConfigInterface>(`${this.baseUrl}/mylessons/config/${type}`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n}\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { MyLessonInterface, MyLessonConfigTypeInterface } from './model';\n\nexport interface LessonState extends EntityState<MyLessonInterface> {\n  lesson: MyLessonInterface [];\n}\n\nexport const defaultLesson: LessonState = {\n  ids: [],\n  entities: {},\n  lesson: []\n};\n\nexport const myLessonAdapter: EntityAdapter<MyLessonInterface> = createEntityAdapter<\n  MyLessonInterface\n>();\n\nexport const myLessonInitialState = myLessonAdapter.getInitialState(defaultLesson);\n\nexport interface MyLessonInitialState{\n  selectedLessonId: string | null;\n  resourceLoaded: boolean;\n  lessons: LessonState;\n  config?: MyLessonConfigTypeInterface;\n  error: string;\n  success: string;\n}\n\nexport const initialState: MyLessonInitialState = {\n  selectedLessonId: null,\n  resourceLoaded: false,\n  lessons: myLessonInitialState,\n  config: {},\n  error: '',\n  success: ''\n};\n\nexport interface MyLessonstate {\n  myLesson: MyLessonInitialState;\n}\n","import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport {\n  RevisePLayerInterface,\n  RevisePlayerResourceInterface,\n  RevisePlayerSubResourceInterface,\n  TqInterface,\n  TqState,\n  ResourceState,\n  SubResourceState,\n  RevisePlayerVideo,\n  RevisePlayerQuizQuestion,\n  RevisePlayerSummary,\n  RevisePlayerSubResourceCommonInterface\n} from './model';\nimport { RevisePlayerState } from './state';\n\nexport enum RevisePlayerActionTypes {\n  GET_TQS = '[RevisePlayer] GET_TQS',\n  GET_TQS_SUCCESS = '[RevisePlayer] GET_TQS_SUCCESS',\n  GET_TQS_FAILED = '[RevisePlayer] GET_TQS_FAILED',\n  GET_TQS_RESOURCE_SUCCESS = '[RevisePlayer] GET_TQS_RESOURCE_SUCCESS',\n  GET_SUB_RESOURCE_SUCCESS = '[RevisePlayer] GET_SUB_RESOURCE_SUCCESS',\n  GET_SUB_RESOURCE_FAILED = '[RevisePlayer] GET_SUB_RESOURCE_FAILED',\n  IS_TQS_EMPTY = \"[RevisePlayer] IS_TQS_EMPTY\",\n  UPDATE_TQ_STATE = \"[RevisePlayer] UPDATE_TQ_STATE\",\n  UPDATE_RESOURCE_STATE = \"[RevisePlayer] UPDATE_RESOURCE_STATE\",\n  UPDATE_SUB_RESOURCE_STATE = \"[RevisePlayer] UPDATE_SUB_RESOURCE_STATE\",\n  GET_SUB_RESOURCE = \"[RevisePlayer] GET_SUB_RESOURCE\",\n  ADD_SUB_RESOURCE_INTERACTION = \"[RevisePlayer] ADD_SUB_RESOURCE_INTERACTION\",\n  RESET_STATE = \"[RevisePlayer] RESET_STATE\"\n}\n\nexport class GetTqs implements Action {\n  readonly type = RevisePlayerActionTypes.GET_TQS;\n}\nexport class GetTqsSuccess implements Action {\n  readonly type = RevisePlayerActionTypes.GET_TQS_SUCCESS;\n  constructor(public payload: TqInterface[]) {}\n}\nexport class GetTqsResourceSuccess implements Action {\n  readonly type = RevisePlayerActionTypes.GET_TQS_RESOURCE_SUCCESS;\n  constructor(public payload: RevisePlayerResourceInterface[]) {}\n}\nexport class GetTqsFailed implements Action {\n  readonly type = RevisePlayerActionTypes.GET_TQS_FAILED;\n  constructor(public payload: string) {}\n}\nexport class GetSubResourceSuccess implements Action {\n  readonly type = RevisePlayerActionTypes.GET_SUB_RESOURCE_SUCCESS;\n  constructor(public payload: RevisePlayerSubResourceInterface []) {}\n}\nexport class GetSubResourceFailed implements Action {\n  readonly type = RevisePlayerActionTypes.GET_SUB_RESOURCE_FAILED;\n  constructor(public payload: string) {}\n}\n\nexport class IsTqsEmpty implements Action {\n  readonly type = RevisePlayerActionTypes.IS_TQS_EMPTY;\n  constructor(public payload: boolean) {}\n}\nexport class UpdateTqState implements Action {\n  readonly type = RevisePlayerActionTypes.UPDATE_TQ_STATE;\n  constructor(public payload: Update<TqInterface>) {}\n}\nexport class UpdateResourceState implements Action {\n  readonly type = RevisePlayerActionTypes.UPDATE_RESOURCE_STATE;\n  constructor(public payload: Update<RevisePlayerResourceInterface>) {}\n}\nexport class UpdateSubResourceState implements Action {\n  readonly type = RevisePlayerActionTypes.UPDATE_SUB_RESOURCE_STATE;\n  constructor(public payload: Update<RevisePlayerSubResourceInterface>) {}\n}\nexport class GetSubResource implements Action {\n  readonly type = RevisePlayerActionTypes.GET_SUB_RESOURCE;\n  constructor(public payload: RevisePlayerSubResourceInterface) {\n  }\n}\nexport class ResetState implements Action {\n  readonly type = RevisePlayerActionTypes.RESET_STATE;\n}\nexport class AddSubResourceInteraction implements Action {\n  readonly type = RevisePlayerActionTypes.ADD_SUB_RESOURCE_INTERACTION;\n}\n\nexport type RevisePlayerActions =\n  | GetTqs\n  | GetTqsSuccess\n  | GetTqsResourceSuccess\n  | GetSubResourceSuccess\n  | GetSubResourceFailed\n  | GetTqsFailed\n  | IsTqsEmpty\n  | UpdateTqState\n  | UpdateResourceState\n  | UpdateSubResourceState\n  | GetSubResource\n  | ResetState;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { RevisePlayerService } from './service';\nimport * as revisePlayerActions from './actions';\nimport {\n  RevisePLayerInterface,\n  TqInterface,\n  RevisePlayerResourceInterface,\n  TqState,\n  ResourceState,\n  RevisePLayerResourceType\n} from './model';\n\n@Injectable()\nexport class RevisePlayerEffects {\n  resourceMap = {\n    assets: RevisePLayerResourceType.VIDEO,\n    questions: RevisePLayerResourceType.QUIZ\n  }\n  constructor(\n    private actions$: Actions,\n    private revisePlayerService: RevisePlayerService\n  ) {}\n\n  @Effect()\n  getRevise$ = this.actions$.pipe(\n    ofType<revisePlayerActions.GetTqs>(\n      revisePlayerActions.RevisePlayerActionTypes.GET_TQS\n    ),\n    switchMap((actions: revisePlayerActions.GetTqs) =>\n      this.revisePlayerService.getRevise().pipe(\n        switchMap((reviseData: any) => {\n          if (reviseData.length > 0) {\n            let tq: TqInterface[] = [];\n            let resource: RevisePlayerResourceInterface[] = [];\n            \n            for (let i = 0; i < reviseData.length; i++) {\n              tq.push({\n                tqId: reviseData[i].tqId,\n                label: reviseData[i].label,\n                TpRef: reviseData[i].TpRef,\n                tqState: TqState.UNLOCK\n              });\n\n              for(let j=0;j<Object.keys(reviseData[i].revise).length;j++) {\n                const resourceType = this.resourceMap[Object.keys(reviseData[i].revise)[j]];\n                if(reviseData[i].revise[Object.keys(reviseData[i].revise)[j]].length!==0) {\n                  resource.push({\n                    tqId: reviseData[i].tqId,\n                    resourceId: `${reviseData[i].tqId}_${resourceType}`,\n                    resourceType: resourceType,\n                    data: reviseData[i].revise[Object.keys(reviseData[i].revise)[j]],\n                    resourceState: ResourceState.UNLOCK\n                  });\n                }\n              }\n\n              if(reviseData[i].summary.cards.length!==0) {\n                resource.push({\n                  tqId: reviseData[i].tqId,\n                  resourceId: `${reviseData[i].tqId}_${RevisePLayerResourceType.SUMMARY}`,\n                  resourceType: RevisePLayerResourceType.SUMMARY,\n                  data: reviseData[i].summary.cards,\n                  resourceState: ResourceState.UNLOCK\n                });\n              }\n\n            }\n\n            return [\n              new revisePlayerActions.GetTqsSuccess(tq),\n              new revisePlayerActions.GetTqsResourceSuccess(resource)\n            ];\n          } else {\n            return [new revisePlayerActions.IsTqsEmpty(true)];\n          }\n        }),\n        catchError(err => of(new revisePlayerActions.GetTqsFailed(err.message)))\n      )\n    )\n  );\n\n  @Effect()\n  $getSubResource = this.actions$.pipe(\n    ofType<revisePlayerActions.GetSubResource>(\n      revisePlayerActions.RevisePlayerActionTypes.GET_SUB_RESOURCE\n    ),\n    switchMap((actions: revisePlayerActions.GetSubResource) =>\n      this.revisePlayerService.getSubResource(actions.payload).pipe(\n        switchMap(subResourceData => {\n          const subResource = {...actions.payload};\n          subResource.data = subResourceData;\n          return [\n            new revisePlayerActions.GetSubResourceSuccess([subResource])\n          ];\n        }),\n        catchError(err => of(new revisePlayerActions.GetSubResourceFailed(err.message)))\n      )\n    )\n  );\n}\n","import * as revisePlayerActions from './actions';\nimport * as revisePlayerState from './state';\nimport * as revisePlayerSelector from './selectors';\nimport { RevisePlayerStoreModule } from './revise-player-store.module';\nexport {\n  RevisePLayerInterface,\n  RevisePlayerResourceInterface,\n  RevisePlayerSubResourceInterface,\n  TqInterface,\n  TqState,\n  SubResourceState,\n  ResourceState,\n  RevisePLayerResourceType,\n  RevisePlayerVideos, \n  RevisePlayerQuiz, \n  RevisePlayerSummarys,\n  RevisePlayerSubResourceCommonInterface,\n  RevisePlayerVideo,\n  RevisePlayerQuizQuestion,\n  RevisePlayerSummary\n} from './model';\nexport {\n  revisePlayerActions,\n  revisePlayerState,\n  revisePlayerSelector,\n  RevisePlayerStoreModule\n};\n","// TQ\nexport enum TqState {\n  LOCK = 0,\n  UNLOCK = 1,\n  SUCCESS_COMPLETED = 2,\n  FAILED_COMPLETED = 3\n}\n\nexport interface TqInterface {\n  tqId: string;\n  label: string;\n  TpRef: string;\n  tqState: TqState;\n  totalStar?: string;\n  totalStarAchieved?: string;\n}\n// TQ\n\n// RESOURCE\nexport enum ResourceState {\n  LOCK = 0,\n  UNLOCK = 1,\n  VISITED = 2,\n  COMPLETED = 3\n}\n\nexport interface RevisePlayerResourceInterface {\n  tqId: string;\n  resourceId: string;\n  resourceType: string;\n  data: Array<any>;\n  resourceState?: ResourceState;\n}\n// RESOURCE\n\n// SUB-RESOURCE\nexport enum SubResourceState {\n  LOCK = 0,\n  UNLOCK = 1,\n  VISITED = 2,\n  COMPLETED = 3\n}\n\nexport interface RevisePlayerSubResourceInterface {\n  tqId: string;\n  subResourceId: string;\n  resourceType: string;\n  subResourceState?: SubResourceState;\n  data: any;\n}\n// SUB-RESOURCE\n\nexport interface RevisePlayerSubResourceCommonInterface{\n  id: string,\n  data: string;\n}\n\nexport enum RevisePLayerResourceType {\n  VIDEO = 'video',\n  QUIZ = 'quiz',\n  SUMMARY = 'summary'\n}\n\nexport interface RevisePlayerVideo extends RevisePlayerSubResourceCommonInterface {\n}\n\nexport interface RevisePlayerVideos {\n  data: RevisePlayerVideo [];\n  resource_type: RevisePLayerResourceType.VIDEO;\n}\n\nexport interface RevisePlayerQuizQuestion extends RevisePlayerSubResourceCommonInterface {\n  order: number;\n  type: string;\n}\n\nexport interface RevisePlayerQuiz {\n  data: RevisePlayerQuizQuestion [];\n  resource_type: RevisePLayerResourceType.QUIZ;\n}\n\nexport interface RevisePlayerSummary extends RevisePlayerSubResourceCommonInterface {\n  title: string;\n  tqId: string;\n  tag: string;\n  closeBtn: boolean;\n}\n\nexport interface RevisePlayerSummarys {\n  data: RevisePlayerSummary [];\n  resource_type: RevisePLayerResourceType.SUMMARY;\n}\n\nexport interface RevisePLayerInterface {\n  label: string;\n  status: string;\n  tqId: string;\n  TpRef: string;\n  data: [RevisePlayerVideos | RevisePlayerQuiz | RevisePlayerSummarys];\n}\n","import * as fromRevisePlayerAction from './actions';\nimport {\n  initialState,\n  RevisePlayerState,\n  tqAdapter,\n  resourceAdapter,\n  subResourceAdapter\n} from './state';\n\nexport function revisePlayerReducer(\n  state = initialState,\n  actions: fromRevisePlayerAction.RevisePlayerActions\n): RevisePlayerState {\n  switch (actions.type) {\n    case fromRevisePlayerAction.RevisePlayerActionTypes.GET_TQS_SUCCESS: {\n      return {\n        ...state,\n        tq: tqAdapter.addMany(actions.payload, state.tq)\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes\n      .GET_TQS_RESOURCE_SUCCESS: {\n      return {\n        ...state,\n        resource: resourceAdapter.addMany(actions.payload, state.resource)\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.GET_TQS_FAILED: {\n      return {\n        ...state,\n        error: actions.payload\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.IS_TQS_EMPTY: {\n      return {\n        ...state,\n        isTqsEmpty: actions.payload\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.UPDATE_TQ_STATE: {\n      return {\n        ...state,\n        tq: tqAdapter.updateOne(actions.payload, state.tq)\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.UPDATE_RESOURCE_STATE: {\n      return {\n        ...state,\n        resource: resourceAdapter.updateOne(actions.payload, state.resource)\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.UPDATE_SUB_RESOURCE_STATE: {\n      return {\n        ...state,\n        subResource: subResourceAdapter.updateOne(actions.payload, state.subResource)\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.GET_SUB_RESOURCE_SUCCESS: {\n      return {\n        ...state,\n        subResource: subResourceAdapter.addMany(actions.payload, state.subResource)\n      }\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.RESET_STATE: {\n      state = initialState;\n      return state;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { states } from './../root-store.state';\nimport { revisePlayerReducer } from './reducer';\nimport { RevisePlayerEffects } from './effects';\nimport { RevisePlayerService } from './service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(states.revisePlayer, revisePlayerReducer),\n    EffectsModule.forFeature([RevisePlayerEffects])\n  ],\n  providers: [RevisePlayerEffects, RevisePlayerService]\n})\nexport class RevisePlayerStoreModule {}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport {\n  tqAdapter,\n  resourceAdapter,\n  subResourceAdapter,\n  TqInitialState,\n  RevisePlayerState,\n  ResourceInitialState,\n  SubResourceInitialState\n} from './state';\nimport { states } from './../root-store.state';\nimport {\n  TqInterface,\n  RevisePlayerResourceInterface,\n  RevisePlayerSubResourceInterface\n} from './model';\n\nconst getRevisePlayerFeatureState = createFeatureSelector<RevisePlayerState>(\n  states.revisePlayer\n);\n\nexport const tqState = createSelector(\n  getRevisePlayerFeatureState,\n  revisePlayer => revisePlayer.tq\n);\n\nexport const resourceState = createSelector(\n  getRevisePlayerFeatureState,\n  revisePlayer => revisePlayer.resource\n);\n\nexport const subResourceState = createSelector(\n  getRevisePlayerFeatureState,\n  revisePlayer => revisePlayer.subResource\n);\n\nexport const { selectAll: selectAllTqs } = tqAdapter.getSelectors(tqState);\n\nexport const { selectAll: selectAllResource } = resourceAdapter.getSelectors(\n  resourceState\n);\n\nexport const {\n  selectAll: selectAllSubResource\n} = subResourceAdapter.getSelectors(subResourceState);\n\nexport const isTqsEmpty = createSelector(\n  tqState,\n  selectAllTqs,\n  (state: TqInitialState, tqs: TqInterface[]) => {\n    if (tqs.length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n);\n\nexport const getResourceByTq = () =>\n  createSelector(\n    resourceState,\n    selectAllResource,\n    (\n      state: ResourceInitialState,\n      resources: RevisePlayerResourceInterface[],\n      props: { tqId: string }\n    ) => {\n      return resources.filter(resource => resource.tqId === props.tqId);\n    }\n  );\n\nexport const getResourceByResourceId = () =>\n  createSelector(\n    resourceState,\n    selectAllResource,\n    (\n      state: ResourceInitialState,\n      resources: RevisePlayerResourceInterface[],\n      props: { resourceId: string }\n    ) => {\n      return resources.filter(\n        resource => resource.resourceId === props.resourceId\n      )[0];\n    }\n  );\n\nexport const isSubResourcePresent = () =>\n  createSelector(\n    subResourceState,\n    selectAllSubResource,\n    (\n      state: SubResourceInitialState,\n      subResources: RevisePlayerSubResourceInterface[],\n      props\n    ) => {\n      const subResource = subResources.filter(\n        subResource => subResource.subResourceId === props.subResource.id\n      );\n      if (subResource.length === 0) {\n        return null;\n      } else {\n        return subResource[0];\n      }\n    }\n  );\n\n  export const getSubResourceByKeyValue = () => createSelector(\n    subResourceState,\n    selectAllSubResource,\n    (\n      state: SubResourceInitialState,\n      subResources: RevisePlayerSubResourceInterface[],\n      props: {key: string, value: string}\n    ) => {\n      return subResources.filter(resource => \n        resource[props.key]===props.value\n      )\n    }\n  )\n\nexport const getTotalResourceTypeLength = () => createSelector(\n  resourceState,\n  selectAllResource,\n  (\n    state: ResourceInitialState,\n    resources: RevisePlayerResourceInterface[],\n    props: { resourceType: Array<string> }\n  ) => {\n    const resourceTypeArray = [];\n    if(resources.length===0){\n      return resourceTypeArray;\n    }else{\n      props.resourceType.map((resourceType) => {\n        let count = 0;\n        const filteredResources = resources.filter(resource => resource.resourceType === resourceType);\n        filteredResources.map(resource => count += resource.data.length);\n        resourceTypeArray.push({\n          type: resourceType, value: count\n        })\n      });\n      return resourceTypeArray;\n    }\n  }\n)\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { RevisePlayerSubResourceInterface } from './model';\n\n@Injectable()\nexport class RevisePlayerService {\n  revisePlayerDataUrl: string = 'student/content/1/api/v1/library/book-1b28adda-275a-4de0-83ea-4a3d91032d3e/revise/concepts';\n\n  subResourceUrls = {\n    'video': (tqId) => `/student/content/1/res/v1/library/book-1b28adda-275a-4de0-83ea-4a3d91032d3e/revise/concept/${tqId}/assets/`,\n    'quiz': (tqId) => `/student/content/1/api/v1/library/book-1b28adda-275a-4de0-83ea-4a3d91032d3e/revise/concept/${tqId}/question/`,\n    'summary': (tqId) => `/student/content/1/api/v1/library/book-1b28adda-275a-4de0-83ea-4a3d91032d3e/revise/concept/${tqId}/notes/`\n  }\n\n  constructor(private http: HttpClient) {}\n\n  getRevise(){\n    const tqIds = [\n      \"tq-a85cf35b-fa0f-4749-b974-9c1b4fe64161\",\n      \"tq-87541b0c-1bf8-4d03-9d59-85521976cf82\"\n    ]\n    return this.http\n      .get(this.revisePlayerDataUrl, { params: {\n        id: tqIds\n      }})\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  getSubResource(subResource: RevisePlayerSubResourceInterface) {\n    const baseUrl = this.subResourceUrls[subResource.resourceType](subResource.tqId);\n    return this.http.get(`${baseUrl}${subResource.subResourceId}`).pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n}\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport {\n  TqInterface,\n  RevisePlayerResourceInterface,\n  RevisePlayerSubResourceInterface\n} from './model';\n\nexport interface TqInitialState extends EntityState<TqInterface> {}\n\nexport const defaultTq: TqInitialState = {\n  ids: [],\n  entities: {}\n};\n\nexport interface ResourceInitialState\n  extends EntityState<RevisePlayerResourceInterface> {}\n\nexport const defaultResource: ResourceInitialState = {\n  ids: [],\n  entities: {}\n};\n\nexport interface SubResourceInitialState\n  extends EntityState<RevisePlayerSubResourceInterface> {}\n\nexport const defaultSubResource: SubResourceInitialState = {\n  ids: [],\n  entities: {}\n};\n\nexport const tqAdapter: EntityAdapter<TqInterface> = createEntityAdapter<\n  TqInterface\n>({\n  selectId: (tq: TqInterface) => tq.tqId\n});\n\nexport const resourceAdapter: EntityAdapter<RevisePlayerResourceInterface> = createEntityAdapter<\n  RevisePlayerResourceInterface\n>({\n  selectId: (resource: RevisePlayerResourceInterface) => resource.resourceId\n});\n\nexport const subResourceAdapter: EntityAdapter<RevisePlayerSubResourceInterface> = createEntityAdapter<\n  RevisePlayerSubResourceInterface\n>({\n  selectId: (subResource: RevisePlayerSubResourceInterface) =>\n    subResource.subResourceId\n});\n\nconst tqInitialState = tqAdapter.getInitialState(defaultTq);\nconst resourceInitialState = resourceAdapter.getInitialState(defaultResource);\nconst subResourceInitialState = subResourceAdapter.getInitialState(\n  defaultSubResource\n);\n\nexport interface RevisePlayerState {\n  tq: TqInitialState;\n  resource: ResourceInitialState;\n  subResource: SubResourceInitialState;\n  isTqsEmpty: boolean;\n  error: string;\n  success: string;\n}\n\nexport const initialState: RevisePlayerState = {\n  tq: tqInitialState,\n  resource: resourceInitialState,\n  subResource: subResourceInitialState,\n  isTqsEmpty: true,\n  error: '',\n  success: ''\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        StoreModule.forRoot({}),\n        EffectsModule.forRoot([]),\n        StoreDevtoolsModule.instrument({})\n    ]\n})\n\nexport class RootStoreModule {}","import { browseBookState } from './browse-book-store';\nimport { myLessonState } from './my-lesson-store';\nimport { revisePlayerState } from './revise-player-store';\n\nexport enum states {\n  browseBook = 'browseBook',\n  myLesson = 'myLesson',\n  revisePlayer = 'revisePlayer'\n}\n\nexport interface State {\n  browseBook: browseBookState.BrowseBookState;\n  mylesson: myLessonState.MyLessonstate;\n  revisePlayer: revisePlayerState.RevisePlayerState;\n}\n","export * from './shared-module-event-handler';","export { SharedModuleEventHandlerService } from './shared-module-event-handler.service';\nexport { SharedModuleEventHandlerModule } from './shared-module-event-handler.module';\nexport { sharedModuleEventHandlerType } from './shared-module-event-handler.types';","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { SharedModuleEventHandlerService } from './shared-module-event-handler.service';\n\n@NgModule({})\n\nexport class SharedModuleEventHandlerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SharedModuleEventHandlerModule,\n      providers: [ SharedModuleEventHandlerService ]\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { from } from 'rxjs';\nimport { sharedModuleEventHandlerType } from './shared-module-event-handler.types';\n\n@Injectable()\n\nexport class SharedModuleEventHandlerService {\n  public listeners;\n  public eventsSubject;\n  public events;\n\n  constructor() {\n    this.listeners = {};\n    this.eventsSubject = new Subject();\n\n    this.events = from(this.eventsSubject);\n\n    this.events.subscribe(({ name, args }) => {\n      if (this.listeners[name]) {\n        for (const listener of this.listeners[name]) {\n          listener(...args);\n        }\n      }\n    });\n  }\n\n  on(name: sharedModuleEventHandlerType, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n\n    this.listeners[name].push(listener);\n  }\n\n  off(name: sharedModuleEventHandlerType) {\n    this.listeners[name] = null;\n  }\n\n  broadcast(name: sharedModuleEventHandlerType, ...args) {\n    this.eventsSubject.next({\n      name,\n      args\n    });\n  }\n}","export enum sharedModuleEventHandlerType {\n    CONTROL_NAVIGATION = \"CONTROL_NAVIGATION\",\n    LESSON_OBJECTIVE_TOGGLE = \"LESSON_OBJECTIVE_TOGGLE\",\n    LESSON_OVERVIEW_TOGGLE = \"LESSON_OVERVIEW_TOGGLE\",\n    CONTINUE_FLOW = \"CONTINUE_FLOW\"\n}","import { Injectable } from '@angular/core';\n\nexport enum DateTypes {\n  TIME = 'time'\n}\n\n@Injectable()\nexport class TimeUtilityService {\n  date = {\n    time: (date: Date) => this.getCurrentDateTime(date)\n  };\n\n  constructor() {}\n\n  getCurrentDate(params?: DateTypes) {\n    const newDate = new Date();\n    if (params) {\n      return this.date[params](newDate);\n    } else {\n      console.log(newDate)\n      return newDate;\n    }\n  }\n\n  getCurrentDateTime(date: Date) {\n    return date.getTime();\n  }\n\n  /*\n    0 ==> Equal\n    1 ==> Less\n    2 ==> Greater\n  */\n  twoDateCompareStatus(date1: Date, date2: Date): number {\n    if (date1.getTime() === date2.getTime()) {\n      return 0;\n    }\n\n    if (date1.getTime() < date2.getTime()) {\n      return 1;\n    } else {\n      return 2;\n    }\n  }\n\n  differenceInTime(startDate: Date, endDate: Date) {\n    const difference = Math.abs(startDate.getTime() - endDate.getTime()) / 1000;\n    const days = Math.floor((startDate.getTime()-endDate.getTime())/(24*3600*1000));\n    const hours = Math.floor(difference / 3600) % 24;\n    const minutes = Math.floor(difference / 60) % 60;\n    const seconds = Math.floor(difference % 60);\n    return { days, hours, minutes, seconds };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'nx-afs-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  \n  public envName = '';\n  public timeStamp = '';\n\n  display;\n  constructor(private route: ActivatedRoute) {\n    this.envName = environment.name;\n    this.timeStamp = environment.timeStamp;\n    \n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      if(params.html){\n        this.display = true;\n      }else{\n        this.display = false;\n      }\n    })\n  }\n\n}\n","<div *ngIf=\"!display\">\n  <ul>\n    <li>\n      <a routerLink=\"/\" [queryParams]=\"{ html: 'true' }\">Go to Html Links</a>\n    </li>\n    <li>\n      <a routerLink=\"/browseBook\">Go to BrowseBook</a>\n    </li>\n    <li>\n      <a routerLink=\"/myLesson\">Go to My Lesson</a>\n    </li>\n  </ul>\n</div>\n<div *ngIf=\"display\">\n  <ul>\n    <li>\n      <a\n        routerLink=\"/lesson/player\"\n        [queryParams]=\"{ player: 'revise', module: 'browseBook' }\"\n        >Go to Intro Screen</a\n      >\n    </li>\n    <li>\n      <a routerLink=\"/html-screen-video-player\">Go to Video Player</a>\n    </li>\n    <li>\n      <a routerLink=\"/lesson/summary\">Summary Player</a>\n    </li>\n  </ul>\n</div>\n<div >{{ envName }} : {{timeStamp}}</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'html-screen-video-player',\n    loadChildren: () =>\n      import('./video-player/video-player.module').then(\n        m => m.videoPlayerModule\n      )\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class HtmlScreensRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HtmlScreensRoutingModule } from './html-screens-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HtmlScreensRoutingModule\n  ],\n  exports: []\n})\n  \nexport class HtmlScreensModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  name: 'dev',\n  production: false,\n  // endpoint: 'https://dev.example.com',\n  timeStamp: 'May 19th, 1:17:58 pm',\n  googleAnalyticsId: null\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}