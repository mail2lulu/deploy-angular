{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.service.ts","./src/app/core/authentication/authentication.service.ts","./src/app/core/http.interceptor.ts","./src/app/core/root-store/browse-book-store/actions.ts","./src/app/core/root-store/browse-book-store/browse-book-store.module.ts","./src/app/core/root-store/browse-book-store/effects.ts","./src/app/core/root-store/browse-book-store/index.ts","./src/app/core/root-store/browse-book-store/metareducers.ts","./src/app/core/root-store/browse-book-store/model.ts","./src/app/core/root-store/browse-book-store/reducer.ts","./src/app/core/root-store/browse-book-store/selectors.ts","./src/app/core/root-store/browse-book-store/service.ts","./src/app/core/root-store/browse-book-store/state.ts","./src/app/core/root-store/index.ts","./src/app/core/root-store/my-lesson-store/actions.ts","./src/app/core/root-store/my-lesson-store/effects.ts","./src/app/core/root-store/my-lesson-store/index.ts","./src/app/core/root-store/my-lesson-store/metareducers.ts","./src/app/core/root-store/my-lesson-store/model.ts","./src/app/core/root-store/my-lesson-store/mylesson-store.module.ts","./src/app/core/root-store/my-lesson-store/reducer.ts","./src/app/core/root-store/my-lesson-store/selectors.ts","./src/app/core/root-store/my-lesson-store/service.ts","./src/app/core/root-store/my-lesson-store/state.ts","./src/app/core/root-store/revise-player-store/actions.ts","./src/app/core/root-store/revise-player-store/effects.ts","./src/app/core/root-store/revise-player-store/index.ts","./src/app/core/root-store/revise-player-store/model.ts","./src/app/core/root-store/revise-player-store/reducer.ts","./src/app/core/root-store/revise-player-store/revise-player-store.module.ts","./src/app/core/root-store/revise-player-store/selectors.ts","./src/app/core/root-store/revise-player-store/service.ts","./src/app/core/root-store/revise-player-store/state.ts","./src/app/core/root-store/root-store.module.ts","./src/app/core/root-store/root-store.state.ts","./src/app/core/shared-module/index.ts","./src/app/core/shared-module/shared-module-event-handler/index.ts","./src/app/core/shared-module/shared-module-event-handler/shared-module-event-handler.module.ts","./src/app/core/shared-module/shared-module-event-handler/shared-module-event-handler.service.ts","./src/app/core/shared-module/shared-module-event-handler/shared-module-event-handler.types.ts","./src/app/core/utility/time/time-utility.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/html-screens/html-screens-routing.module.ts","./src/app/html-screens/html-screens.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'browseBook',\n    loadChildren: () =>\n      import('./browse-book/browse.book.module').then(\n        m => m.BrowseBookModule\n      )\n  },\n  {\n    path: 'myLesson',\n    loadChildren: () =>\n      import('./my-lesson/my-lesson.module').then(\n        m => m.MyLessonModule\n      )\n  },\n  {\n    path: 'lesson',\n    loadChildren: () =>\n      import('./lesson-player/lesson-player.module').then(\n        m => m.LessonPlayerModule\n      )\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'nx-afs-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n}\n","<div>\n  <router-outlet #outlet=\"outlet\"></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RootStoreModule } from './core/root-store/root-store.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingService } from './app.routing.service';\nimport { BrowseBookStoreModule, MyLessonStoreModule } from '@root-store';\nimport { SharedModuleEventHandlerModule } from '@shared-event-handler';\nimport { HomeComponent } from './home/home.component';\nimport { HtmlScreensModule } from './html-screens/html-screens.module';\nimport { ApiInterceptor, TokenInterceptor } from './core/http.interceptor';\nimport { AuthenticationService } from './core/authentication/authentication.service';\nimport { TimeUtilityService } from '@utility/time/time-utility.service';\n\nexport function checkToken(authenticationService: AuthenticationService) {\n  return () => authenticationService.checkToken();\n}\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    RootStoreModule,\n    BrowserAnimationsModule,\n    BrowseBookStoreModule,\n    MyLessonStoreModule,\n    SharedModuleEventHandlerModule.forRoot(),\n    HtmlScreensModule\n  ],\n  providers: [\n    AppRoutingService,\n    AuthenticationService,\n    TimeUtilityService,\n    { provide: APP_INITIALIZER, useFactory: checkToken, deps: [AuthenticationService], multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n  ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable()\n\nexport class AppRoutingService{\n    private _launchedModuleName: string = \"\";\n\n    constructor(private router: Router){}\n\n    launchLessonPlayer(fromModule, queryParams){\n        this.getLaunchedModuleName = fromModule;\n        this.router.navigate(['/lesson/player'], {queryParams: queryParams});\n    }\n\n    get getLaunchedModuleName(){\n        return this._launchedModuleName;\n    }\n\n    set getLaunchedModuleName(moduleName: string){\n        this._launchedModuleName = moduleName;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {\n  TimeUtilityService,\n  DateTypes\n} from '@utility/time/time-utility.service';\nimport { Observable } from 'rxjs';\n\nexport interface AuthenticationTokenDetails {\n  accessToken: string;\n  clientId: string;\n  refreshToken: string;\n}\n\n@Injectable()\nexport class AuthenticationService {\n  authenticateUrl = 'tce/login';\n\n  constructor(\n    private http: HttpClient,\n    private timeUtilityService: TimeUtilityService\n  ) {}\n\n  authenticate(credentials) {\n    return this.http.post<AuthenticationTokenDetails>(\n      this.authenticateUrl,\n      credentials\n    );\n  }\n\n  isTokenExpired() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    const getTimeSpan = this.timeUtilityService.differenceInTime(\n      new Date(),\n      new Date(token.date)\n    );\n    if (getTimeSpan.days > 10) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isTokenPresent() {\n    const token = localStorage.getItem('token');\n    return token ? true : false;\n  }\n\n  checkToken(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.isTokenPresent() && !this.isTokenExpired()) {\n        resolve();\n      } else {\n        this.authenticate({ userName: 'ajay', password: 'ajay' }).subscribe(\n          tokenDetails => {\n            localStorage.setItem(\n              'token',\n              JSON.stringify({\n                value: tokenDetails.accessToken,\n                date: this.timeUtilityService.getCurrentDate()\n              })\n            );\n            resolve();\n          },\n          error => {\n            reject(error);\n          }\n        );\n      }\n    });\n  }\n\n  getToken() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    if(token){\n      return token.value;\n    }else{\n      return null;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './authentication/authentication.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private auth: AuthenticationService) {}\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.auth.getToken()}`\n      }\n    });\n    return next.handle(req);\n  }\n}\n\nexport class ApiInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    let apiReq;\n    const hostName = document.location.hostname;\n    let isApi = req.url;\n    let isApiArray = isApi.split('/');\n    let domains = [\n      'ui-static-files.s3-website.ap-south-1.amazonaws.com',\n      'tce-afs-web.firebaseapp.com'\n    ];\n\n    if (\n      domains.includes(hostName) && (isApiArray[0] === 'tce' || isApiArray[0] === 'student')\n    ) {\n      apiReq = req.clone({\n        url: `http://13.235.241.238:8080/${req.url}`\n      });\n    } else if (domains.includes(hostName) && isApiArray[0] === 'dummy-api') {\n      apiReq = req.clone({ url: `https://classedgeapps.firebaseapp.com/api/${req.url}` });\n    } else {\n      apiReq = req.clone({ url: `${req.url}` });\n    }\n\n    return next.handle(apiReq);\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { NodeInterface, ResourceInterface, BrowseBookConfigInterface, BrowseBookConfigTypeInterface } from './model';\n\nexport enum BrowseBookActionTypes {\n  SET_RESOURCE = '[BrowseBook] SET_RESOURCE',\n  GET_RESOURCES = '[BrowseBook] GET_RESOURCES',\n  GET_RESOURCES_SUCCESS = '[BrowseBook] GET_RESOURCES_SUCCESS',\n  GET_RESOURCES_FAILED = '[BrowseBook] GET_RESOURCES_FAILED',\n  UPDATE_RESOURCE = '[BrowseBook] UPDATE_RESOURCE',\n\n  PREV_NODE = '[BrowseBook] PREV_NODE',\n  GET_NODES = '[BrowseBook] GET_NODES',\n  SET_NODE = '[BrowseBook] SET_NODE',\n  GET_NODES_SUCCESS = '[BrowseBook] GET_NODES_SUCCESS',\n  GET_NODES_FAILED = '[BrowseBook] GET_NODES_FAILED',\n\n  IS_NODE_EMPTY = '[BrowseBook] IS_NODE_EMPTY',\n  IS_RESOURCE_EMPTY = '[BrowseBook] IS_RESOURCE_EMPTY',\n\n  GET_CONFIG = '[BrowseBook] GET_CONFIG',\n  GET_CONFIG_SUCCESS = '[BrowseBook] GET_CONFIG_SUCCESS',\n  GET_CONFIG_FAILED = '[BrowseBook] GET_CONFIG_FAILED'\n}\n\nexport class SetResource implements Action {\n  readonly type = BrowseBookActionTypes.SET_RESOURCE;\n\n  constructor(public payload: string) {}\n}\nexport class GetResources implements Action {\n  readonly type = BrowseBookActionTypes.GET_RESOURCES;\n}\nexport class GetResourcesSuccess implements Action {\n  readonly type = BrowseBookActionTypes.GET_RESOURCES_SUCCESS;\n  constructor(public payload: ResourceInterface[]) {}\n}\nexport class GetResourcesFailed implements Action {\n  readonly type = BrowseBookActionTypes.GET_RESOURCES_FAILED;\n  constructor(public payload: string) {}\n}\nexport class UpdateResource implements Action {\n  readonly type = BrowseBookActionTypes.UPDATE_RESOURCE;\n  constructor(public payload: Update<ResourceInterface>) {}\n}\n\nexport class PrevNode implements Action {\n  readonly type = BrowseBookActionTypes.PREV_NODE;\n}\nexport class GetNodes implements Action {\n  readonly type = BrowseBookActionTypes.GET_NODES;\n}\nexport class SetNode implements Action {\n  readonly type = BrowseBookActionTypes.SET_NODE;\n\n  constructor(public payload: string) {}\n}\nexport class GetNodesSuccess implements Action {\n  readonly type = BrowseBookActionTypes.GET_NODES_SUCCESS;\n\n  constructor(public payload: NodeInterface[]) {}\n}\nexport class GetNodesFailed implements Action {\n  readonly type = BrowseBookActionTypes.GET_NODES_FAILED;\n\n  constructor(public payload: string) {}\n}\n\nexport class IsNodeEmpty implements Action {\n  readonly type = BrowseBookActionTypes.IS_NODE_EMPTY;\n\n  constructor(public payload: boolean) {}\n}\nexport class IsResourceEmpty implements Action {\n  readonly type = BrowseBookActionTypes.IS_RESOURCE_EMPTY;\n\n  constructor(public payload: boolean) {}\n}\n\nexport class GetConfig implements Action {\n  readonly type = BrowseBookActionTypes.GET_CONFIG;\n\n  constructor(public payload: string) {}\n}\nexport class GetConfigSuccess implements Action {\n  readonly type = BrowseBookActionTypes.GET_CONFIG_SUCCESS;\n\n  constructor(public payload: BrowseBookConfigTypeInterface) {}\n}\nexport class GetConfigFailed implements Action {\n  readonly type = BrowseBookActionTypes.GET_CONFIG_FAILED;\n\n  constructor(public payload: string) {}\n}\n\nexport type BrowseBookActions =\n  | GetResources\n  | SetResource\n  | GetResourcesSuccess\n  | GetResourcesFailed\n  | UpdateResource\n  | PrevNode\n  | GetNodes\n  | SetNode\n  | GetNodesSuccess\n  | GetNodesFailed\n  | IsNodeEmpty\n  | IsResourceEmpty\n  | GetConfig\n  | GetConfigSuccess\n  | GetConfigFailed;\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { BrowseBookService } from './service';\nimport { BrowseBookEffects } from './effects';\nimport { states } from './../root-store.state';\nimport { reducers, metaReducers } from './metareducers';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(states.browseBook, reducers, { metaReducers }),\n    EffectsModule.forFeature([BrowseBookEffects])\n  ],\n  providers: [BrowseBookService, BrowseBookEffects]\n})\nexport class BrowseBookStoreModule {}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { catchError, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { BrowseBookService } from './service';\nimport * as browseBookActions from './actions';\nimport { NodeInterface, ResourceInterface, BrowseBookConfigInterface } from './model';\nimport { State } from './../root-store.state';\nimport { Store } from '@ngrx/store';\n\n@Injectable()\nexport class BrowseBookEffects {\n  constructor(\n    private actions$: Actions,\n    private browseBookService: BrowseBookService,\n    private store: Store<State>\n  ) {}\n\n  @Effect()\n  getResources$ = this.actions$.pipe(\n    ofType<browseBookActions.GetResources>(\n      browseBookActions.BrowseBookActionTypes.GET_RESOURCES\n    ),\n    withLatestFrom(this.store),\n    switchMap(([action, store]) => {\n      return this.browseBookService\n        .getResource(store.browseBook.browseBook.selectedNode)\n        .pipe(\n          switchMap((resource: ResourceInterface[]) => {\n            if (resource.length != 0) {\n              return [new browseBookActions.GetResourcesSuccess(resource)];\n            } else {\n              return [new browseBookActions.IsResourceEmpty(true)];\n            }\n          }),\n          catchError(err =>\n            of(new browseBookActions.GetResourcesFailed(err.message))\n          )\n        );\n    })\n  );\n\n  @Effect()\n  getNode$ = this.actions$.pipe(\n    ofType<browseBookActions.GetNodes>(\n      browseBookActions.BrowseBookActionTypes.GET_NODES\n    ),\n    withLatestFrom(this.store),\n    switchMap(([action, store]) => {\n      return this.browseBookService\n        .getNode(store.browseBook.browseBook.selectedNode)\n        .pipe(\n          switchMap((resource: NodeInterface[]) => {\n            if (resource.length != 0) {\n              return [new browseBookActions.GetNodesSuccess(resource)];\n            } else {\n              return [new browseBookActions.IsNodeEmpty(true)];\n            }\n          }),\n          catchError(err =>\n            of(new browseBookActions.GetNodesFailed(err.message))\n          )\n        );\n    })\n  );\n\n  @Effect()\n  $goBack = this.actions$.pipe(\n    ofType<browseBookActions.PrevNode>(\n      browseBookActions.BrowseBookActionTypes.PREV_NODE\n    ),\n    withLatestFrom(this.store),\n    switchMap(([action, store]) => {\n      const navigateToNode = store.browseBook.browseBook.node.entities[\n        store.browseBook.browseBook.selectedNode\n      ] as NodeInterface;\n      if (navigateToNode) {\n        return of(new browseBookActions.SetNode(navigateToNode.parentNodeId));\n      } else {\n        return new Observable();\n      }\n    })\n  );\n\n  @Effect()\n  getConfig$ = this.actions$.pipe(\n    ofType<browseBookActions.GetConfig>(\n      browseBookActions.BrowseBookActionTypes.GET_CONFIG\n    ),\n    switchMap((actions: browseBookActions.GetConfig) => \n    this.browseBookService.getConfig(actions.payload).pipe(\n      switchMap((configData: BrowseBookConfigInterface) => {\n        const config = {};\n        config[actions.payload] = configData;\n        return [\n          new browseBookActions.GetConfigSuccess(config),\n        ]\n      }),\n      catchError(err => of(new browseBookActions.GetConfigFailed(err.message)))\n    ))\n  );\n}\n","import * as browseBookActions from './actions';\nimport * as browseBookSelectors from './selectors';\nimport * as browseBookState from './state';\nimport { BrowseBookStoreModule } from './browse-book-store.module';\n\nexport {\n  ResourceInterface,\n  NodeInterface,\n  BrowseBookConfigInterface\n} from './model';\n\nexport {\n  BrowseBookStoreModule,\n  browseBookActions,\n  browseBookSelectors,\n  browseBookState\n};\n","import { ActionReducer, MetaReducer, ActionReducerMap } from '@ngrx/store';\nimport * as fromBrowseBook from './state';\nimport { browseBookReducer } from './reducer';\nimport { localStorageSync } from 'ngrx-store-localstorage';\nimport { states } from './../root-store.state';\nimport { Action } from '@ngrx/store';\n\nexport const reducers: ActionReducerMap<fromBrowseBook.BrowseBookState> = {\n  browseBook: browseBookReducer\n};\n\nexport function localStorageSyncReducer(\n  reducer: ActionReducer<any>\n): ActionReducer<any> {\n  return localStorageSync({\n    keys: [states.browseBook],\n    rehydrate: true\n  })(reducer);\n}\n\nexport const metaReducers: Array<MetaReducer<\n  fromBrowseBook.BrowseBookState,\n  Action\n>> = [localStorageSyncReducer];\n","export interface NodeInterface {\n  nodeId: string;\n  nodeLabel: string;\n  acronym: string;\n  totalChildNodes: number;\n  childNodeType: string;\n  lastVisitedDt: string;\n  duration: number;\n  parentNodeId: string;\n  nodeType: string;\n  progress: number;\n}\n\nexport interface BrowseBookConfigTypeInterface{\n  revise?: BrowseBookConfigInterface,\n  practice?: BrowseBookConfigInterface\n}\n\nexport class BrowseBookConfigInterface{\n  dynamicComponents: Array<string>;\n  controls: object\n}\n\nexport interface ResourceInterface {\n  resourceId: string;\n  lessonLabel: string;\n  duration: number;\n  acronym: string;\n  lessonType: string;\n  chapterLabel: string;\n  tqList: [];\n  lessonSeq: number;\n  progress: number;\n  lastVisitDt: string;\n  nodeId: string;\n  introScreen? : {\n    dynamicComponents: Array<string>,\n    // controls: any\n  };\n}\n","import * as fromBrowseBookResourceAction from './actions';\nimport {\n  initialState,\n  BrowseBookInitialState,\n  resourceAdapter,\n  nodeAdapter\n} from './state';\n\nexport function browseBookReducer(\n  state = initialState,\n  actions: fromBrowseBookResourceAction.BrowseBookActions\n): BrowseBookInitialState {\n  switch (actions.type) {\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.SET_RESOURCE: {\n      return { ...state, selectedResourceId: actions.payload };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.UPDATE_RESOURCE: {\n      return {\n        ...state,\n        resource: resourceAdapter.updateOne(actions.payload, state.resource)\n      };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes\n      .GET_RESOURCES_SUCCESS: {\n      return {\n        ...state,\n        resource: resourceAdapter.addMany(actions.payload, {\n          ...state.resource,\n          resources: [...state.resource.resources, ...actions.payload]\n        })\n      };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.SET_NODE: {\n      return {\n        ...state,\n        selectedNode: actions.payload\n      };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.GET_NODES_SUCCESS: {\n      return {\n        ...state,\n        node: nodeAdapter.addMany(actions.payload, {\n          ...state.node,\n          nodes: [...state.node.nodes, ...actions.payload]\n        })\n      };\n    }\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.GET_NODES_FAILED: {\n      return {\n        ...state,\n        error: actions.payload\n      };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.IS_NODE_EMPTY: {\n      return {\n        ...state,\n        isNodeEmpty: actions.payload\n      };\n    }\n\n    case fromBrowseBookResourceAction.BrowseBookActionTypes.IS_RESOURCE_EMPTY: {\n      return {\n        ...state,\n        isResourceEmpty: actions.payload\n      };\n    }\n    \n    case fromBrowseBookResourceAction.BrowseBookActionTypes.GET_CONFIG_SUCCESS: {\n      return {\n        ...state,\n        config: actions.payload\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport {\n  ResourceState,\n  resourceAdapter,\n  nodeAdapter,\n  NodeState,\n  BrowseBookState\n} from './state';\nimport { states } from './../root-store.state';\n\nconst getBrowseBookFeatureState = createFeatureSelector<BrowseBookState>(\n  states.browseBook\n);\n\nexport const resourcesState = createSelector(\n  getBrowseBookFeatureState,\n  browsebook => browsebook.browseBook.resource\n);\n\nexport const nodeState = createSelector(\n  getBrowseBookFeatureState,\n  node => node.browseBook.node\n);\n\nexport const { selectAll: selectAllResources } = resourceAdapter.getSelectors(\n  resourcesState\n);\n\nexport const { selectAll: selectAllNodes } = nodeAdapter.getSelectors(\n  nodeState\n);\n\nexport const getCurrentResourceId = createSelector(\n  getBrowseBookFeatureState,\n  (state: BrowseBookState) => state.browseBook.selectedResourceId\n);\n\nexport const getCurrentResource = createSelector(\n  resourcesState,\n  getCurrentResourceId,\n  (state: ResourceState, selectedId: string) => {\n    return state.entities[selectedId];\n  }\n);\n\nexport const getSelectedNodeId = createSelector(\n  getBrowseBookFeatureState,\n  (state: BrowseBookState) => state.browseBook.selectedNode\n);\n\nexport const getNodeList = createSelector(nodeState, state => state.entities);\nexport const isNodePresent = createSelector(\n  nodeState,\n  getSelectedNodeId,\n  (state: NodeState, selectedNode: string) => {\n    return Object.values(state.entities).filter(\n      val => val.parentNodeId === selectedNode\n    );\n  }\n);\n\nexport const isResourcePresent = createSelector(\n  resourcesState,\n  getSelectedNodeId,\n  (state: ResourceState, selectedResource: string) => {\n    return Object.values(state.entities).filter(\n      val => val.nodeId === selectedResource\n    );\n  }\n);\n\nexport const getSelectedNodeList = createSelector(\n  nodeState,\n  getSelectedNodeId,\n  (state: NodeState, selectedNode: string) => {\n    return state.nodes.filter(node => node.parentNodeId === selectedNode);\n  }\n);\n\nexport const isNodeEmpty = createSelector(\n  getBrowseBookFeatureState,\n  (state: BrowseBookState) => state.browseBook.isNodeEmpty\n);\n\nexport const isResourceEmpty = createSelector(\n  getBrowseBookFeatureState,\n  (state: BrowseBookState) => state.browseBook.isResourceEmpty\n);\n\nexport const getBrowseBookConfigByType = () =>\n  createSelector(\n    getBrowseBookFeatureState,\n    (state: BrowseBookState, props: {lessonType: string }) => state.browseBook.config[props.lessonType]\n  );\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { NodeInterface, ResourceInterface, BrowseBookConfigInterface } from './model';\n\n@Injectable()\nexport class BrowseBookService {\n  nodeUrl: string = 'dummy-api/browse-book/nodes';\n  resourceUrl: string = 'dummy-api/browse-book/resources';\n  configUrl: string = 'dummy-api/browse-book/config';\n\n  constructor(private http: HttpClient) {}\n\n  getNode(nodeType: string) {\n    return this.http\n      .get<NodeInterface[]>(`${this.nodeUrl}/${nodeType}`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  getResource(resourceType: string) {\n    return this.http\n      .get<ResourceInterface[]>(`${this.resourceUrl}/${resourceType}`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  getConfig(type: string){\n    return this.http\n      .get<BrowseBookConfigInterface>(`${this.configUrl}/${type}`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n}\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { NodeInterface, ResourceInterface, BrowseBookConfigInterface, BrowseBookConfigTypeInterface } from './model';\n\nexport interface ResourceState extends EntityState<ResourceInterface> {\n  resources: ResourceInterface[];\n}\n\nexport const defaultResource: ResourceState = {\n  ids: [],\n  entities: {},\n  resources: []\n};\n\nexport interface NodeState extends EntityState<NodeInterface> {\n  nodes: NodeInterface[];\n}\n\nexport const defaultNode: NodeState = {\n  ids: [],\n  entities: {},\n  nodes: []\n};\n\nexport const resourceAdapter: EntityAdapter<ResourceInterface> = createEntityAdapter<\n  ResourceInterface\n>({\n  selectId: (resource: ResourceInterface) => resource.resourceId\n});\nexport const nodeAdapter: EntityAdapter<NodeInterface> = createEntityAdapter<\n  NodeInterface\n>({\n  selectId: (node: NodeInterface) => node.nodeId\n});\n\nconst resourceInitialState = resourceAdapter.getInitialState(defaultResource);\nconst nodeInitialState = nodeAdapter.getInitialState(defaultNode);\n\nexport interface BrowseBookInitialState {\n  resource: ResourceState;\n  node: NodeState;\n  selectedResourceId: string | null;\n  selectedNode: string;\n  isNodeEmpty: boolean;\n  isResourceEmpty: boolean;\n  config?: BrowseBookConfigTypeInterface;\n  error: string;\n  success: string;\n}\n\nexport const initialState: BrowseBookInitialState = {\n  resource: resourceInitialState,\n  node: nodeInitialState,\n  selectedResourceId: null,\n  selectedNode: 'root',\n  isNodeEmpty: true,\n  config: {},\n  isResourceEmpty: true,\n  error: '',\n  success: ''\n};\n\nexport interface BrowseBookState {\n  browseBook: BrowseBookInitialState;\n}\n","import * as RootStoreState from './root-store.state';\nexport * from './my-lesson-store';\nexport * from './browse-book-store';\nexport * from './revise-player-store';\nexport { RootStoreState }","import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { MyLessonInterface, MyLessonConfigTypeInterface } from './model';\n\nexport enum MyLessonsActionTypes {\n  SET_RESOURCE = '[MyLesson]  SET_RESOURCE',\n  UPDATE_RESOURCE = '[MyLesson] UPDATE_RESOURCE',\n  GET_RESOURCES = '[MyLesson] GET_RESOURCES',\n  GET_LESSON = '[MyLesson] GET_LESSON',\n  GET_LESSONS = '[MyLesson] GET_LESSONS',\n  GET_LESSONS_SUCCESS = '[MyLesson] GET_LESSONS_SUCCESS',\n  GET_LESSONS_FAILED = '[MyLesson] GET_LESSONS_FAILED',\n  RESOURCE_LOADED = '[MyLesson] RESOURCE_LOADED',\n  GET_CONFIG = '[MyLesson] GET_CONFIG',\n  GET_CONFIG_SUCCESS = '[MyLesson] GET_CONFIG_SUCCESS',\n  GET_CONFIG_FAILED = '[MyLesson] GET_CONFIG_FAILED'\n}\n\nexport class SetResource implements Action {\n  readonly type = MyLessonsActionTypes.SET_RESOURCE;\n\n  constructor(public payload: string) {}\n}\n\nexport class UpdateResource implements Action {\n  readonly type = MyLessonsActionTypes.UPDATE_RESOURCE;\n  constructor(public payload: Update<MyLessonInterface>) {}\n}\nexport class GetResources implements Action {\n  readonly type = MyLessonsActionTypes.GET_RESOURCES;\n}\nexport class GetLessons implements Action {\n  readonly type = MyLessonsActionTypes.GET_LESSONS;\n}\n\nexport class GetLessonsSuccess implements Action {\n  readonly type = MyLessonsActionTypes.GET_LESSONS_SUCCESS;\n\n  constructor(public payload: Array<MyLessonInterface>) {}\n}\nexport class GetLessonsFailed implements Action {\n  readonly type = MyLessonsActionTypes.GET_LESSONS_FAILED;\n  constructor(public payload: string) {}\n}\n\nexport class ResourceLoaded implements Action {\n  readonly type = MyLessonsActionTypes.RESOURCE_LOADED;\n\n  constructor(public payload: boolean) {}\n}\n\nexport class GetLesson implements Action {\n  readonly type = MyLessonsActionTypes.GET_LESSON;\n\n  constructor(public payload: string) {}\n}\n\nexport class GetConfig implements Action {\n  readonly type = MyLessonsActionTypes.GET_CONFIG;\n\n  constructor(public payload: string) {}\n}\nexport class GetConfigSuccess implements Action {\n  readonly type = MyLessonsActionTypes.GET_CONFIG_SUCCESS;\n\n  constructor(public payload: MyLessonConfigTypeInterface) {}\n}\nexport class GetConfigFailed implements Action {\n  readonly type = MyLessonsActionTypes.GET_CONFIG_FAILED;\n\n  constructor(public payload: string) {}\n}\n\nexport type MyLessonsActions =\n  | GetLesson\n  | SetResource\n  | GetLessons\n  | GetLessonsSuccess\n  | GetLessonsFailed\n  | ResourceLoaded\n  | GetResources\n  | UpdateResource\n  | GetConfig\n  | GetConfigSuccess\n  | GetConfigFailed;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { LessonService } from './service';\nimport * as lessonActions from './actions';\nimport { MyLessonInterface, MyLessonConfigInterface } from './model';\n\n@Injectable()\nexport class LessonsEffects {\n  constructor(\n    private actions$: Actions,\n    private lessonService: LessonService\n  ) {}\n\n  @Effect()\n  getLessons$ = this.actions$.pipe(\n    ofType<lessonActions.GetLessons>(\n      lessonActions.MyLessonsActionTypes.GET_LESSONS\n    ),\n    switchMap((actions: lessonActions.GetLessons) =>\n      this.lessonService.getAPILessons().pipe(\n        switchMap((lesson: MyLessonInterface[]) => [\n          new lessonActions.GetLessonsSuccess(lesson),\n          new lessonActions.ResourceLoaded(true)\n        ]),\n        catchError(err => of(new lessonActions.GetLessonsFailed(err.message)))\n      )\n    )\n  );\n\n  @Effect()\n  getConfig$ = this.actions$.pipe(\n    ofType<lessonActions.GetConfig>(\n      lessonActions.MyLessonsActionTypes.GET_CONFIG\n    ),\n    switchMap((actions: lessonActions.GetConfig) =>\n      this.lessonService.getConfig(actions.payload).pipe(\n        switchMap((configData: MyLessonConfigInterface) => {\n          const config = {};\n          config[actions.payload] = configData;\n          return [new lessonActions.GetConfigSuccess(config)];\n        }),\n        catchError(err => of(new lessonActions.GetConfigFailed(err.message)))\n      )\n    )\n  );\n\n  // @Effect()\n  // updateLesson$ = this.actions$.pipe(\n  //     ofType<lessonActions.UpdateLessonApi>(\n  //         lessonActions.LessonsActionType.UPDATE_LESSON_API\n  //     ),\n  //     mergeMap((actions: lessonActions.UpdateLessonApi) =>\n  //         this.lessonService.updateAPILesson(actions.payload).pipe(\n  //             map((lesson: LessonInterface) => new lessonActions.UpdateLessonSuccess('Lesson Updated Successfully!')),\n  //             catchError(err => of(new lessonActions.UpdateLessonFailed(err.message))),\n  //             tap(action => console.log(action))\n  //         )\n  //     )\n  // );\n}\n","import * as myLessonActions from './actions';\nimport * as myLessonSelectors from './selectors';\nimport * as myLessonState from './state';\nimport { MyLessonStoreModule } from './mylesson-store.module';\nexport {\n  MyLessonInterface,\n  MyLessonConfigInterface\n} from './model';\n\nexport {\n  MyLessonStoreModule,\n  myLessonActions,\n  myLessonSelectors,\n  myLessonState\n};\n","import { ActionReducer, MetaReducer, ActionReducerMap } from '@ngrx/store';\nimport * as fromMylesson from './state';\nimport { lessonsReducer } from './reducer';\nimport { localStorageSync } from 'ngrx-store-localstorage';\nimport { states } from './../root-store.state';\n\nexport const reducers: ActionReducerMap<fromMylesson.MyLessonstate> = {\n  myLesson: lessonsReducer\n};\n\nexport function localStorageSyncReducer(\n  reducer: ActionReducer<any>\n): ActionReducer<any> {\n  return localStorageSync({\n    keys: [states.myLesson],\n    rehydrate: true\n  })(reducer);\n}\n\nexport const metaReducers: Array<MetaReducer<any, any>> = [\n  localStorageSyncReducer\n];\n","export interface MyLessonConfigTypeInterface{\n  revise?: MyLessonConfigInterface,\n  practice?: MyLessonConfigInterface\n}\n\nexport class MyLessonConfigInterface{\n  dynamicComponents: Array<string>;\n  controls: object\n}\n\n\nexport interface MyLessonInterface {\n  id: string;\n  assignedDt: string;\n  assignedSeq: number;\n  chapterLabel: string;\n  complete: number;\n  completedDt: string;\n  duration: number;\n  goalsAchieved: number;\n  isMandatory: number;\n  lastVisitDt: string;\n  lessonId: number;\n  lessonLabel: string;\n  lessonSeq: number;\n  lessonType: string;\n  nodeMapping: string;\n  projectedDt: string;\n  scheduledDt: string;\n  score: number;\n  status: number;\n  timeSpent: number;\n  totalGoals: number;\n  tqList: Array<any>;\n  introScreen? : {\n    dynamicComponents: Array<string>,\n    // controls: any\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { LessonService } from './service';\nimport { LessonsEffects } from './effects';\nimport { states } from './../root-store.state';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './metareducers';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(states.myLesson, reducers, { metaReducers }),\n    EffectsModule.forFeature([LessonsEffects])\n  ],\n  providers: [LessonService, LessonsEffects]\n})\nexport class MyLessonStoreModule {}\n","import * as fromMyLessonAction from './actions';\nimport { MyLessonInitialState, myLessonAdapter, initialState } from './state';\n\nexport function lessonsReducer(\n  state = initialState,\n  actions: fromMyLessonAction.MyLessonsActions\n): MyLessonInitialState {\n  switch (actions.type) {\n    case fromMyLessonAction.MyLessonsActionTypes.SET_RESOURCE: {\n      return { ...state, selectedLessonId: actions.payload };\n    }\n    case fromMyLessonAction.MyLessonsActionTypes.GET_LESSON: {\n      return { ...state, selectedLessonId: actions.payload };\n    }\n    case fromMyLessonAction.MyLessonsActionTypes.GET_LESSONS_SUCCESS: {\n      let msgText = '';\n\n      if (actions.payload.length < 1) {\n        msgText = 'No data found';\n      } else {\n        msgText = 'Loading data';\n      }\n\n      return {\n        ...state,\n        lessons: myLessonAdapter.addMany(actions.payload, {\n          ...state.lessons,\n          lesson: [...state.lessons.lesson, ...actions.payload]\n        })\n      }\n    }\n    case fromMyLessonAction.MyLessonsActionTypes.GET_LESSONS_FAILED: {\n      return { ...state, error: actions.payload };\n    }\n\n    case fromMyLessonAction.MyLessonsActionTypes.RESOURCE_LOADED: {\n      return { ...state, resourceLoaded: actions.payload };\n    }\n    case fromMyLessonAction.MyLessonsActionTypes.UPDATE_RESOURCE: {\n      return {\n        ...state,\n        lessons: myLessonAdapter.updateOne(actions.payload, state.lessons)\n      };\n    }\n\n    case fromMyLessonAction.MyLessonsActionTypes.GET_CONFIG_SUCCESS: {\n      return {\n        ...state,\n        config: actions.payload\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { MyLessonstate, myLessonAdapter } from './state';\nimport { states } from './../root-store.state';\n\nconst getMyLessonFeatureState = createFeatureSelector<MyLessonstate>(\n  states.myLesson\n);\n\nexport const getMyLessonInitialFeatureState = createSelector(\n  getMyLessonFeatureState,\n  myLesson => myLesson.myLesson.lessons\n);\n\nexport const { selectAll: getLessons } = myLessonAdapter.getSelectors(getMyLessonInitialFeatureState);\n\nexport const getCurrentLessonId = createSelector(\n  getMyLessonFeatureState,\n  (state: MyLessonstate) => state.myLesson.selectedLessonId\n);\n\nexport const getCurrentLesson = createSelector(\n  getMyLessonFeatureState,\n  getCurrentLessonId,\n  (state: MyLessonstate) => {\n    return state.myLesson.lessons.entities[state.myLesson.selectedLessonId];\n  }\n);\n\nexport const isResourceLoaded = createSelector(\n  getMyLessonFeatureState,\n  (state: MyLessonstate) => {\n    return state.myLesson.resourceLoaded;\n  }\n);\n\nexport const getMyLessonConfigByType = () =>\n  createSelector(\n    getMyLessonFeatureState,\n    (state: MyLessonstate, props: {lessonType: string }) => state.myLesson.config[props.lessonType]\n  );","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { MyLessonInterface, MyLessonConfigInterface } from './model';\n\n@Injectable()\nexport class LessonService {\n  baseUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.baseUrl = 'dummy-api';\n  }\n\n  getAPILessons() {\n    return this.http\n      .get(`${this.baseUrl}/mylessons`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  getVideoPlayerData() {\n    return this.http\n      .get(`${this.baseUrl}/video-player`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  updateAPILesson(lesson: MyLessonInterface) {\n    return this.http\n      .put(`${this.baseUrl}/lessons/${lesson.id}`, lesson)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  getConfig(type: string){\n    return this.http\n      .get<MyLessonConfigInterface>(`${this.baseUrl}/mylessons/config/${type}`)\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n}\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { MyLessonInterface, MyLessonConfigTypeInterface } from './model';\n\nexport interface LessonState extends EntityState<MyLessonInterface> {\n  lesson: MyLessonInterface [];\n}\n\nexport const defaultLesson: LessonState = {\n  ids: [],\n  entities: {},\n  lesson: []\n};\n\nexport const myLessonAdapter: EntityAdapter<MyLessonInterface> = createEntityAdapter<\n  MyLessonInterface\n>();\n\nexport const myLessonInitialState = myLessonAdapter.getInitialState(defaultLesson);\n\nexport interface MyLessonInitialState{\n  selectedLessonId: string | null;\n  resourceLoaded: boolean;\n  lessons: LessonState;\n  config?: MyLessonConfigTypeInterface;\n  error: string;\n  success: string;\n}\n\nexport const initialState: MyLessonInitialState = {\n  selectedLessonId: null,\n  resourceLoaded: false,\n  lessons: myLessonInitialState,\n  config: {},\n  error: '',\n  success: ''\n};\n\nexport interface MyLessonstate {\n  myLesson: MyLessonInitialState;\n}\n","import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport {\n  RevisePLayerInterface,\n  RevisePlayerResourceInterface,\n  RevisePlayerSubResourceInterface,\n  TqInterface,\n  TqState,\n  ResourceState,\n  SubResourceState,\n  RevisePlayerVideo,\n  RevisePlayerQuizQuestion,\n  RevisePlayerSummary,\n  RevisePlayerSubResourceCommonInterface\n} from './model';\nimport { RevisePlayerState } from './state';\n\nexport enum RevisePlayerActionTypes {\n  GET_TQS = '[RevisePlayer] GET_TQS',\n  GET_TQS_SUCCESS = '[RevisePlayer] GET_TQS_SUCCESS',\n  GET_TQS_FAILED = '[RevisePlayer] GET_TQS_FAILED',\n  GET_TQS_RESOURCE_SUCCESS = '[RevisePlayer] GET_TQS_RESOURCE_SUCCESS',\n  GET_SUB_RESOURCE_SUCCESS = '[RevisePlayer] GET_SUB_RESOURCE_SUCCESS',\n  GET_SUB_RESOURCE_FAILED = '[RevisePlayer] GET_SUB_RESOURCE_FAILED',\n  IS_TQS_EMPTY = \"[RevisePlayer] IS_TQS_EMPTY\",\n  UPDATE_TQ_STATE = \"[RevisePlayer] UPDATE_TQ_STATE\",\n  UPDATE_RESOURCE_STATE = \"[RevisePlayer] UPDATE_RESOURCE_STATE\",\n  UPDATE_SUB_RESOURCE_STATE = \"[RevisePlayer] UPDATE_SUB_RESOURCE_STATE\",\n  GET_SUB_RESOURCE = \"[RevisePlayer] GET_SUB_RESOURCE\",\n  ADD_SUB_RESOURCE_INTERACTION = \"[RevisePlayer] ADD_SUB_RESOURCE_INTERACTION\",\n  RESET_STATE = \"[RevisePlayer] RESET_STATE\"\n}\n\nexport class GetTqs implements Action {\n  readonly type = RevisePlayerActionTypes.GET_TQS;\n}\nexport class GetTqsSuccess implements Action {\n  readonly type = RevisePlayerActionTypes.GET_TQS_SUCCESS;\n  constructor(public payload: TqInterface[]) {}\n}\nexport class GetTqsResourceSuccess implements Action {\n  readonly type = RevisePlayerActionTypes.GET_TQS_RESOURCE_SUCCESS;\n  constructor(public payload: RevisePlayerResourceInterface[]) {}\n}\nexport class GetTqsFailed implements Action {\n  readonly type = RevisePlayerActionTypes.GET_TQS_FAILED;\n  constructor(public payload: string) {}\n}\nexport class GetSubResourceSuccess implements Action {\n  readonly type = RevisePlayerActionTypes.GET_SUB_RESOURCE_SUCCESS;\n  constructor(public payload: RevisePlayerSubResourceInterface []) {}\n}\nexport class GetSubResourceFailed implements Action {\n  readonly type = RevisePlayerActionTypes.GET_SUB_RESOURCE_FAILED;\n  constructor(public payload: string) {}\n}\n\nexport class IsTqsEmpty implements Action {\n  readonly type = RevisePlayerActionTypes.IS_TQS_EMPTY;\n  constructor(public payload: boolean) {}\n}\nexport class UpdateTqState implements Action {\n  readonly type = RevisePlayerActionTypes.UPDATE_TQ_STATE;\n  constructor(public payload: Update<TqInterface>) {}\n}\nexport class UpdateResourceState implements Action {\n  readonly type = RevisePlayerActionTypes.UPDATE_RESOURCE_STATE;\n  constructor(public payload: Update<RevisePlayerResourceInterface>) {}\n}\nexport class UpdateSubResourceState implements Action {\n  readonly type = RevisePlayerActionTypes.UPDATE_SUB_RESOURCE_STATE;\n  constructor(public payload: Update<RevisePlayerSubResourceInterface>) {}\n}\nexport class GetSubResource implements Action {\n  readonly type = RevisePlayerActionTypes.GET_SUB_RESOURCE;\n  constructor(public payload: RevisePlayerSubResourceInterface) {\n  }\n}\nexport class ResetState implements Action {\n  readonly type = RevisePlayerActionTypes.RESET_STATE;\n}\nexport class AddSubResourceInteraction implements Action {\n  readonly type = RevisePlayerActionTypes.ADD_SUB_RESOURCE_INTERACTION;\n}\n\nexport type RevisePlayerActions =\n  | GetTqs\n  | GetTqsSuccess\n  | GetTqsResourceSuccess\n  | GetSubResourceSuccess\n  | GetSubResourceFailed\n  | GetTqsFailed\n  | IsTqsEmpty\n  | UpdateTqState\n  | UpdateResourceState\n  | UpdateSubResourceState\n  | GetSubResource\n  | ResetState;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { RevisePlayerService } from './service';\nimport * as revisePlayerActions from './actions';\nimport {\n  RevisePLayerInterface,\n  TqInterface,\n  RevisePlayerResourceInterface,\n  TqState,\n  ResourceState,\n  RevisePLayerResourceType\n} from './model';\n\n@Injectable()\nexport class RevisePlayerEffects {\n  resourceMap = {\n    assets: RevisePLayerResourceType.VIDEO,\n    questions: RevisePLayerResourceType.QUIZ\n  }\n  constructor(\n    private actions$: Actions,\n    private revisePlayerService: RevisePlayerService\n  ) {}\n\n  @Effect()\n  getRevise$ = this.actions$.pipe(\n    ofType<revisePlayerActions.GetTqs>(\n      revisePlayerActions.RevisePlayerActionTypes.GET_TQS\n    ),\n    switchMap((actions: revisePlayerActions.GetTqs) =>\n      this.revisePlayerService.getRevise().pipe(\n        switchMap((reviseData: any) => {\n          if (reviseData.length > 0) {\n            let tq: TqInterface[] = [];\n            let resource: RevisePlayerResourceInterface[] = [];\n            \n            for (let i = 0; i < reviseData.length; i++) {\n              tq.push({\n                tqId: reviseData[i].tqId,\n                label: reviseData[i].label,\n                TpRef: reviseData[i].TpRef,\n                tqState: TqState.UNLOCK\n              });\n\n              for(let j=0;j<Object.keys(reviseData[i].revise).length;j++) {\n                const resourceType = this.resourceMap[Object.keys(reviseData[i].revise)[j]];\n                if(reviseData[i].revise[Object.keys(reviseData[i].revise)[j]].length!==0) {\n                  resource.push({\n                    tqId: reviseData[i].tqId,\n                    resourceId: `${reviseData[i].tqId}_${resourceType}`,\n                    resourceType: resourceType,\n                    data: reviseData[i].revise[Object.keys(reviseData[i].revise)[j]],\n                    resourceState: ResourceState.UNLOCK\n                  });\n                }\n              }\n\n              if(reviseData[i].summary.cards.length!==0) {\n                resource.push({\n                  tqId: reviseData[i].tqId,\n                  resourceId: `${reviseData[i].tqId}_${RevisePLayerResourceType.SUMMARY}`,\n                  resourceType: RevisePLayerResourceType.SUMMARY,\n                  data: reviseData[i].summary.cards,\n                  resourceState: ResourceState.UNLOCK\n                });\n              }\n\n            }\n\n            return [\n              new revisePlayerActions.GetTqsSuccess(tq),\n              new revisePlayerActions.GetTqsResourceSuccess(resource)\n            ];\n          } else {\n            return [new revisePlayerActions.IsTqsEmpty(true)];\n          }\n        }),\n        catchError(err => of(new revisePlayerActions.GetTqsFailed(err.message)))\n      )\n    )\n  );\n\n  @Effect()\n  $getSubResource = this.actions$.pipe(\n    ofType<revisePlayerActions.GetSubResource>(\n      revisePlayerActions.RevisePlayerActionTypes.GET_SUB_RESOURCE\n    ),\n    switchMap((actions: revisePlayerActions.GetSubResource) =>\n      this.revisePlayerService.getSubResource(actions.payload).pipe(\n        switchMap(subResourceData => {\n          const subResource = {...actions.payload};\n          subResource.data = subResourceData;\n          return [\n            new revisePlayerActions.GetSubResourceSuccess([subResource])\n          ];\n        }),\n        catchError(err => of(new revisePlayerActions.GetSubResourceFailed(err.message)))\n      )\n    )\n  );\n}\n","import * as revisePlayerActions from './actions';\nimport * as revisePlayerState from './state';\nimport * as revisePlayerSelector from './selectors';\nimport { RevisePlayerStoreModule } from './revise-player-store.module';\nexport {\n  RevisePLayerInterface,\n  RevisePlayerResourceInterface,\n  RevisePlayerSubResourceInterface,\n  TqInterface,\n  TqState,\n  SubResourceState,\n  ResourceState,\n  RevisePLayerResourceType,\n  RevisePlayerVideos, \n  RevisePlayerQuiz, \n  RevisePlayerSummarys,\n  RevisePlayerSubResourceCommonInterface,\n  RevisePlayerVideo,\n  RevisePlayerQuizQuestion,\n  RevisePlayerSummary\n} from './model';\nexport {\n  revisePlayerActions,\n  revisePlayerState,\n  revisePlayerSelector,\n  RevisePlayerStoreModule\n};\n","// TQ\nexport enum TqState {\n  LOCK = 0,\n  UNLOCK = 1,\n  SUCCESS_COMPLETED = 2,\n  FAILED_COMPLETED = 3\n}\n\nexport interface TqInterface {\n  tqId: string;\n  label: string;\n  TpRef: string;\n  tqState: TqState;\n  totalStar?: string;\n  totalStarAchieved?: string;\n}\n// TQ\n\n// RESOURCE\nexport enum ResourceState {\n  LOCK = 0,\n  UNLOCK = 1,\n  VISITED = 2,\n  COMPLETED = 3\n}\n\nexport interface RevisePlayerResourceInterface {\n  tqId: string;\n  resourceId: string;\n  resourceType: string;\n  data: Array<any>;\n  resourceState?: ResourceState;\n}\n// RESOURCE\n\n// SUB-RESOURCE\nexport enum SubResourceState {\n  LOCK = 0,\n  UNLOCK = 1,\n  VISITED = 2,\n  COMPLETED = 3\n}\n\nexport interface RevisePlayerSubResourceInterface {\n  tqId: string;\n  subResourceId: string;\n  resourceType: string;\n  subResourceState?: SubResourceState;\n  data: any;\n}\n// SUB-RESOURCE\n\nexport interface RevisePlayerSubResourceCommonInterface{\n  id: string,\n  data: string;\n}\n\nexport enum RevisePLayerResourceType {\n  VIDEO = 'video',\n  QUIZ = 'quiz',\n  SUMMARY = 'summary'\n}\n\nexport interface RevisePlayerVideo extends RevisePlayerSubResourceCommonInterface {\n}\n\nexport interface RevisePlayerVideos {\n  data: RevisePlayerVideo [];\n  resource_type: RevisePLayerResourceType.VIDEO;\n}\n\nexport interface RevisePlayerQuizQuestion extends RevisePlayerSubResourceCommonInterface {\n  order: number;\n  type: string;\n}\n\nexport interface RevisePlayerQuiz {\n  data: RevisePlayerQuizQuestion [];\n  resource_type: RevisePLayerResourceType.QUIZ;\n}\n\nexport interface RevisePlayerSummary extends RevisePlayerSubResourceCommonInterface {\n  title: string;\n  tqId: string;\n  tag: string;\n  closeBtn: boolean;\n}\n\nexport interface RevisePlayerSummarys {\n  data: RevisePlayerSummary [];\n  resource_type: RevisePLayerResourceType.SUMMARY;\n}\n\nexport interface RevisePLayerInterface {\n  label: string;\n  status: string;\n  tqId: string;\n  TpRef: string;\n  data: [RevisePlayerVideos | RevisePlayerQuiz | RevisePlayerSummarys];\n}\n","import * as fromRevisePlayerAction from './actions';\nimport {\n  initialState,\n  RevisePlayerState,\n  tqAdapter,\n  resourceAdapter,\n  subResourceAdapter\n} from './state';\n\nexport function revisePlayerReducer(\n  state = initialState,\n  actions: fromRevisePlayerAction.RevisePlayerActions\n): RevisePlayerState {\n  switch (actions.type) {\n    case fromRevisePlayerAction.RevisePlayerActionTypes.GET_TQS_SUCCESS: {\n      return {\n        ...state,\n        tq: tqAdapter.addMany(actions.payload, state.tq)\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes\n      .GET_TQS_RESOURCE_SUCCESS: {\n      return {\n        ...state,\n        resource: resourceAdapter.addMany(actions.payload, state.resource)\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.GET_TQS_FAILED: {\n      return {\n        ...state,\n        error: actions.payload\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.IS_TQS_EMPTY: {\n      return {\n        ...state,\n        isTqsEmpty: actions.payload\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.UPDATE_TQ_STATE: {\n      return {\n        ...state,\n        tq: tqAdapter.updateOne(actions.payload, state.tq)\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.UPDATE_RESOURCE_STATE: {\n      return {\n        ...state,\n        resource: resourceAdapter.updateOne(actions.payload, state.resource)\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.UPDATE_SUB_RESOURCE_STATE: {\n      return {\n        ...state,\n        subResource: subResourceAdapter.updateOne(actions.payload, state.subResource)\n      };\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.GET_SUB_RESOURCE_SUCCESS: {\n      return {\n        ...state,\n        subResource: subResourceAdapter.addMany(actions.payload, state.subResource)\n      }\n    }\n    case fromRevisePlayerAction.RevisePlayerActionTypes.RESET_STATE: {\n      state = initialState;\n      return state;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { states } from './../root-store.state';\nimport { revisePlayerReducer } from './reducer';\nimport { RevisePlayerEffects } from './effects';\nimport { RevisePlayerService } from './service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(states.revisePlayer, revisePlayerReducer),\n    EffectsModule.forFeature([RevisePlayerEffects])\n  ],\n  providers: [RevisePlayerEffects, RevisePlayerService]\n})\nexport class RevisePlayerStoreModule {}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport {\n  tqAdapter,\n  resourceAdapter,\n  subResourceAdapter,\n  TqInitialState,\n  RevisePlayerState,\n  ResourceInitialState,\n  SubResourceInitialState\n} from './state';\nimport { states } from './../root-store.state';\nimport {\n  TqInterface,\n  RevisePlayerResourceInterface,\n  RevisePlayerSubResourceInterface\n} from './model';\n\nconst getRevisePlayerFeatureState = createFeatureSelector<RevisePlayerState>(\n  states.revisePlayer\n);\n\nexport const tqState = createSelector(\n  getRevisePlayerFeatureState,\n  revisePlayer => revisePlayer.tq\n);\n\nexport const resourceState = createSelector(\n  getRevisePlayerFeatureState,\n  revisePlayer => revisePlayer.resource\n);\n\nexport const subResourceState = createSelector(\n  getRevisePlayerFeatureState,\n  revisePlayer => revisePlayer.subResource\n);\n\nexport const { selectAll: selectAllTqs } = tqAdapter.getSelectors(tqState);\n\nexport const { selectAll: selectAllResource } = resourceAdapter.getSelectors(\n  resourceState\n);\n\nexport const {\n  selectAll: selectAllSubResource\n} = subResourceAdapter.getSelectors(subResourceState);\n\nexport const isTqsEmpty = createSelector(\n  tqState,\n  selectAllTqs,\n  (state: TqInitialState, tqs: TqInterface[]) => {\n    if (tqs.length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n);\n\nexport const getResourceByTq = () =>\n  createSelector(\n    resourceState,\n    selectAllResource,\n    (\n      state: ResourceInitialState,\n      resources: RevisePlayerResourceInterface[],\n      props: { tqId: string }\n    ) => {\n      return resources.filter(resource => resource.tqId === props.tqId);\n    }\n  );\n\nexport const getResourceByResourceId = () =>\n  createSelector(\n    resourceState,\n    selectAllResource,\n    (\n      state: ResourceInitialState,\n      resources: RevisePlayerResourceInterface[],\n      props: { resourceId: string }\n    ) => {\n      return resources.filter(\n        resource => resource.resourceId === props.resourceId\n      )[0];\n    }\n  );\n\nexport const isSubResourcePresent = () =>\n  createSelector(\n    subResourceState,\n    selectAllSubResource,\n    (\n      state: SubResourceInitialState,\n      subResources: RevisePlayerSubResourceInterface[],\n      props\n    ) => {\n      const subResource = subResources.filter(\n        subResource => subResource.subResourceId === props.subResource.id\n      );\n      if (subResource.length === 0) {\n        return null;\n      } else {\n        return subResource[0];\n      }\n    }\n  );\n\n  export const getSubResourceByKeyValue = () => createSelector(\n    subResourceState,\n    selectAllSubResource,\n    (\n      state: SubResourceInitialState,\n      subResources: RevisePlayerSubResourceInterface[],\n      props: {key: string, value: string}\n    ) => {\n      return subResources.filter(resource => \n        resource[props.key]===props.value\n      )\n    }\n  )\n\nexport const getTotalResourceTypeLength = () => createSelector(\n  resourceState,\n  selectAllResource,\n  (\n    state: ResourceInitialState,\n    resources: RevisePlayerResourceInterface[],\n    props: { resourceType: Array<string> }\n  ) => {\n    const resourceTypeArray = [];\n    if(resources.length===0){\n      return resourceTypeArray;\n    }else{\n      props.resourceType.map((resourceType) => {\n        let count = 0;\n        const filteredResources = resources.filter(resource => resource.resourceType === resourceType);\n        filteredResources.map(resource => count += resource.data.length);\n        resourceTypeArray.push({\n          type: resourceType, value: count\n        })\n      });\n      return resourceTypeArray;\n    }\n  }\n)\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { RevisePlayerSubResourceInterface } from './model';\n\n@Injectable()\nexport class RevisePlayerService {\n  revisePlayerDataUrl: string = 'student/content/1/api/v1/library/book-1b28adda-275a-4de0-83ea-4a3d91032d3e/revise/concepts';\n\n  subResourceUrls = {\n    'video': (tqId) => `/student/content/1/res/v1/library/book-1b28adda-275a-4de0-83ea-4a3d91032d3e/revise/concept/${tqId}/assets/`,\n    'quiz': (tqId) => `/student/content/1/api/v1/library/book-1b28adda-275a-4de0-83ea-4a3d91032d3e/revise/concept/${tqId}/question/`,\n    'summary': (tqId) => `/student/content/1/api/v1/library/book-1b28adda-275a-4de0-83ea-4a3d91032d3e/revise/concept/${tqId}/notes/`\n  }\n\n  constructor(private http: HttpClient) {}\n\n  getRevise(){\n    const tqIds = [\n      \"tq-a85cf35b-fa0f-4749-b974-9c1b4fe64161\",\n      \"tq-87541b0c-1bf8-4d03-9d59-85521976cf82\"\n    ]\n    return this.http\n      .get(this.revisePlayerDataUrl, { params: {\n        id: tqIds\n      }})\n      .pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n  getSubResource(subResource: RevisePlayerSubResourceInterface) {\n    const baseUrl = this.subResourceUrls[subResource.resourceType](subResource.tqId);\n    return this.http.get(`${baseUrl}${subResource.subResourceId}`).pipe(catchError((error: any) => throwError(error.message)));\n  }\n\n}\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport {\n  TqInterface,\n  RevisePlayerResourceInterface,\n  RevisePlayerSubResourceInterface\n} from './model';\n\nexport interface TqInitialState extends EntityState<TqInterface> {}\n\nexport const defaultTq: TqInitialState = {\n  ids: [],\n  entities: {}\n};\n\nexport interface ResourceInitialState\n  extends EntityState<RevisePlayerResourceInterface> {}\n\nexport const defaultResource: ResourceInitialState = {\n  ids: [],\n  entities: {}\n};\n\nexport interface SubResourceInitialState\n  extends EntityState<RevisePlayerSubResourceInterface> {}\n\nexport const defaultSubResource: SubResourceInitialState = {\n  ids: [],\n  entities: {}\n};\n\nexport const tqAdapter: EntityAdapter<TqInterface> = createEntityAdapter<\n  TqInterface\n>({\n  selectId: (tq: TqInterface) => tq.tqId\n});\n\nexport const resourceAdapter: EntityAdapter<RevisePlayerResourceInterface> = createEntityAdapter<\n  RevisePlayerResourceInterface\n>({\n  selectId: (resource: RevisePlayerResourceInterface) => resource.resourceId\n});\n\nexport const subResourceAdapter: EntityAdapter<RevisePlayerSubResourceInterface> = createEntityAdapter<\n  RevisePlayerSubResourceInterface\n>({\n  selectId: (subResource: RevisePlayerSubResourceInterface) =>\n    subResource.subResourceId\n});\n\nconst tqInitialState = tqAdapter.getInitialState(defaultTq);\nconst resourceInitialState = resourceAdapter.getInitialState(defaultResource);\nconst subResourceInitialState = subResourceAdapter.getInitialState(\n  defaultSubResource\n);\n\nexport interface RevisePlayerState {\n  tq: TqInitialState;\n  resource: ResourceInitialState;\n  subResource: SubResourceInitialState;\n  isTqsEmpty: boolean;\n  error: string;\n  success: string;\n}\n\nexport const initialState: RevisePlayerState = {\n  tq: tqInitialState,\n  resource: resourceInitialState,\n  subResource: subResourceInitialState,\n  isTqsEmpty: true,\n  error: '',\n  success: ''\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        StoreModule.forRoot({}),\n        EffectsModule.forRoot([]),\n        StoreDevtoolsModule.instrument({})\n    ]\n})\n\nexport class RootStoreModule {}","import { browseBookState } from './browse-book-store';\nimport { myLessonState } from './my-lesson-store';\nimport { revisePlayerState } from './revise-player-store';\n\nexport enum states {\n  browseBook = 'browseBook',\n  myLesson = 'myLesson',\n  revisePlayer = 'revisePlayer'\n}\n\nexport interface State {\n  browseBook: browseBookState.BrowseBookState;\n  mylesson: myLessonState.MyLessonstate;\n  revisePlayer: revisePlayerState.RevisePlayerState;\n}\n","export * from './shared-module-event-handler';","export { SharedModuleEventHandlerService } from './shared-module-event-handler.service';\nexport { SharedModuleEventHandlerModule } from './shared-module-event-handler.module';\nexport { sharedModuleEventHandlerType } from './shared-module-event-handler.types';","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { SharedModuleEventHandlerService } from './shared-module-event-handler.service';\n\n@NgModule({})\n\nexport class SharedModuleEventHandlerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SharedModuleEventHandlerModule,\n      providers: [ SharedModuleEventHandlerService ]\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { from } from 'rxjs';\nimport { sharedModuleEventHandlerType } from './shared-module-event-handler.types';\n\n@Injectable()\n\nexport class SharedModuleEventHandlerService {\n  public listeners;\n  public eventsSubject;\n  public events;\n\n  constructor() {\n    this.listeners = {};\n    this.eventsSubject = new Subject();\n\n    this.events = from(this.eventsSubject);\n\n    this.events.subscribe(({ name, args }) => {\n      if (this.listeners[name]) {\n        for (const listener of this.listeners[name]) {\n          listener(...args);\n        }\n      }\n    });\n  }\n\n  on(name: sharedModuleEventHandlerType, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n\n    this.listeners[name].push(listener);\n  }\n\n  off(name: sharedModuleEventHandlerType) {\n    this.listeners[name] = null;\n  }\n\n  broadcast(name: sharedModuleEventHandlerType, ...args) {\n    this.eventsSubject.next({\n      name,\n      args\n    });\n  }\n}","export enum sharedModuleEventHandlerType {\n    CONTROL_NAVIGATION = \"CONTROL_NAVIGATION\",\n    LESSON_OBJECTIVE_TOGGLE = \"LESSON_OBJECTIVE_TOGGLE\",\n    LESSON_OVERVIEW_TOGGLE = \"LESSON_OVERVIEW_TOGGLE\",\n    CONTINUE_FLOW = \"CONTINUE_FLOW\"\n}","import { Injectable } from '@angular/core';\n\nexport enum DateTypes {\n  TIME = 'time'\n}\n\n@Injectable()\nexport class TimeUtilityService {\n  date = {\n    time: (date: Date) => this.getCurrentDateTime(date)\n  };\n\n  constructor() {}\n\n  getCurrentDate(params?: DateTypes) {\n    const newDate = new Date();\n    if (params) {\n      return this.date[params](newDate);\n    } else {\n      console.log(newDate)\n      return newDate;\n    }\n  }\n\n  getCurrentDateTime(date: Date) {\n    return date.getTime();\n  }\n\n  /*\n    0 ==> Equal\n    1 ==> Less\n    2 ==> Greater\n  */\n  twoDateCompareStatus(date1: Date, date2: Date): number {\n    if (date1.getTime() === date2.getTime()) {\n      return 0;\n    }\n\n    if (date1.getTime() < date2.getTime()) {\n      return 1;\n    } else {\n      return 2;\n    }\n  }\n\n  differenceInTime(startDate: Date, endDate: Date) {\n    const difference = Math.abs(startDate.getTime() - endDate.getTime()) / 1000;\n    const days = Math.floor((startDate.getTime()-endDate.getTime())/(24*3600*1000));\n    const hours = Math.floor(difference / 3600) % 24;\n    const minutes = Math.floor(difference / 60) % 60;\n    const seconds = Math.floor(difference % 60);\n    return { days, hours, minutes, seconds };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'nx-afs-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  \n  public envName = '';\n  public timeStamp = '';\n\n  display;\n  constructor(private route: ActivatedRoute) {\n    this.envName = environment.name;\n    this.timeStamp = environment.timeStamp;\n    \n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      if(params.html){\n        this.display = true;\n      }else{\n        this.display = false;\n      }\n    })\n  }\n\n}\n","<div *ngIf=\"!display\">\n  <ul>\n    <li>\n      <a routerLink=\"/\" [queryParams]=\"{ html: 'true' }\">Go to Html Links</a>\n    </li>\n    <li>\n      <a routerLink=\"/browseBook\">Go to BrowseBook</a>\n    </li>\n    <li>\n      <a routerLink=\"/myLesson\">Go to My Lesson</a>\n    </li>\n  </ul>\n</div>\n<div *ngIf=\"display\">\n  <ul>\n    <li>\n      <a\n        routerLink=\"/lesson/player\"\n        [queryParams]=\"{ player: 'revise', module: 'browseBook' }\"\n        >Go to Intro Screen</a\n      >\n    </li>\n    <li>\n      <a routerLink=\"/html-screen-video-player\">Go to Video Player</a>\n    </li>\n    <li>\n      <a routerLink=\"/lesson/summary\">Summary Player</a>\n    </li>\n  </ul>\n</div>\n<div >{{ envName }} : {{timeStamp}}</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'html-screen-video-player',\n    loadChildren: () =>\n      import('./video-player/video-player.module').then(\n        m => m.videoPlayerModule\n      )\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class HtmlScreensRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HtmlScreensRoutingModule } from './html-screens-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HtmlScreensRoutingModule\n  ],\n  exports: []\n})\n  \nexport class HtmlScreensModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  name: 'dev',\n  production: false,\n  // endpoint: 'https://dev.example.com',\n  timeStamp: 'May 19th, 1:17:58 pm',\n  googleAnalyticsId: null\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}